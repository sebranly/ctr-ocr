{"version":3,"sources":["types.ts","constants/general.ts","constants/index.ts","utils/string.ts","utils/number.ts","utils/charList.ts","utils/index.ts","utils/image.ts","utils/array.ts","utils/validation.ts","utils/date.ts","utils/lorenzi.ts","components/Footer.tsx","components/BasicMsg.tsx","components/LorenziVisual.tsx","utils/points.ts","components/PresetButton.tsx","components/UsersInputs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Category","Progress","Sign","AUTHOR_GITHUB","PROJECT_URL","GUIDE_FOLDER","JSON_DATA_FOLDER","URL_CPUS","URL_HUMAN_PLAYERS","EXAMPLE_IMAGES_FOLDER","EXAMPLE_IMAGES_FOLDER_FULL_EVENT","CHANGELOG_URL","MIME_JPEG","MIME_PNG","getClosestString","str","list","listSafe","filter","s","min","Infinity","name","forEach","distance","getEditDistance","str1","str2","newStr1","newStr2","length","i","distanceLine","j","push","substitutionCost","getSubstitutionCost","Math","character1","character2","char1","charAt","char2","charactersMatch","characters","includes","sortAlphanumeric","strA","strB","regexAlpha","regexNumeric","newA","replace","newB","aN","parseInt","bN","sortCaseInsensitive","a","b","lowerA","toLowerCase","lowerB","numberRange","max","numbers","applyRatio","ratio","nb","floor","getCharListDigits","join","formatCpuPlayers","cpuPlayers","sort","getPlayers","players","getReferencePlayers","humanPlayers","includeCpuPlayers","newHumanPlayers","newCpuPlayers","getPositionString","position","lastDigit","getParams","category","Position","Time","Username","charList","allLetters","player","split","uniq","getCharListFromUsernames","tessedit_char_whitelist","tessedit_pageseg_mode","getTeamNames","nbTeams","map","n","getColorHexadecimalTeam","teamIndex","getMimeType","extension","getExtract","info","index","width","height","left","top","widthCrop","heightCrop","All","ratioHeight","extract","ratioTime","ratioEnd","ratioLeftOffsetName","ratioEndPosition","antiRatioTime","rectangle","topExt","heightExt","leftExtTime","widthExtTime","leftExtName","widthExtName","isTime","leftExt","widthExt","getFilenameWithoutExtension","filename","isEqual","a1","a2","every","v","createArraySameValue","value","_v","validatePoints","points","validation","correct","errMsg","sortedPoints","validateUsernames","usernames","some","formatDate","dateTimestamp","d","Date","month","getMonth","day","getDate","getFullYear","getInitialLorenziTeams","color","createLorenziTeams","races","playerTeams","teams","lorenziTeams","playersPoints","createLorenziPlayersPoints","teamPlayersLines","team","indexTeam","lorenziTeam","teamLine","Object","keys","pointsLine","line","createLorenziIntro","race","result","username","relevantResult","find","now","createLorenziFFA","playersLines","playerPoints","Footer","className","href","rel","title","target","BasicMsg","props","msg","LorenziVisual","setLorenziTeams","onChangeProperty","isName","e","currentTarget","newLorenziTeams","key","onChange","type","getAbsolutePointsScheme","nbPlayers","isRanked","isDoubleRush","pointsScheme","isFFA","isDuo","isTrio","isQuatuor","slicedPointsScheme","slice","lengthDiff","remaining","PresetButton","isDisabledUI","setAbsolutePointsScheme","setSignPointsScheme","newAbsolutePointsScheme","isSamePreset","onClick","Positive","disabled","UsersInputs","setPlayers","suggestions","onChangeInput","newPlayers","renderDatalist","datalistId","datalistIdString","id","suggestion","_players","renderUserInput","App","renderBodyPointsScheme","absolutePointsScheme","_points","indexPoints","selectedSign","signPointsScheme","classesSelect","disabledUI","onChangeSignPointsScheme","renderOptionsSign","onChangeAbsolutePointsScheme","Negative","sign","label","renderBody","renderOption","option","indexOption","classesSelectPlayer","isMobile","resultsOcr","resultOcr","indexPlayer","isHumanPlayer","onChangeResultsPlayer","optionsResultsPlayerHuman","optionsResultsPlayerCpu","renderOptions","onChangeResultsPoints","renderRace","labelRace","validationUsernames","r","validationPoints","croppedImages","classes","alt","src","renderCroppedImage","renderTable","renderLorenzi","indexRace","incorrectRaces","getIncorrectRaces","labelError","rowsLorenzi","lorenzi","match","options","message","text","onCopy","setCopiedLorenzi","copiedLorenzi","classPlatform","rows","renderPresets","commonProps","renderPointsSchemeSection","renderTablePointsScheme","renderTeamSection","onChangeNbTeams","optionsNbTeams","renderTeamRepartition","onChangeTeam","newPlayerTeams","setPlayerTeams","renderPlayerTeamRepartition","colorPlayer","playerTeam","indexOf","getColorPlayer","playerClassnames","isChecked","checked","htmlFor","renderPlayerTeams","classesValidation","validationTeams","isWarning","playersNames","renderCpuSection","cpuData","guideCpu","optionsCpuLanguages","textCheckbox","shouldIncludeCpuPlayers","nbPlayersTyped","onCpuCheckboxChange","onChangeCpuLanguage","cpuLanguage","placeholder","onMount","setOnMountOver","setDisabledUI","fetch","then","response","json","data","setCpuData","setCpuPlayers","playstation","nintendo","switch","xbox","newSuggestionPlayers","setSuggestionPlayers","doOCR","onMountOver","setOcrProgress","Started","setOcrProgressText","setResultsOcr","setIndexRace","setCroppedImages","setLorenzi","setStartOverConfirm","schedulerUsername","createScheduler","workerUsername","createWorker","addWorker","load","loadLanguage","initialize","usernameParams","setParameters","playerIndexes","promisesX","playerIndex","imgTransCopy","scheduler","dimensions","mimeType","extracted","crop","count","getBufferAsync","buffer","getColors","colors","rgb","shouldInvert","extractedFin","invert","bufferFin","addJob","resultsOcrTemp","croppedImagesTemp","imagesURLs","progressText","Jimp","read","imgJimpTemp","initialHeight","bitmap","imgJimp","resize","AUTO","imgTrans","rotate","h","w","getExtension","dimensionsCrop","clone","getBase64","err","imgTransGray","grayscale","promisesNames","Promise","all","results","resultsNames","replaceAll","dataResults","referencePlayers","csv","playerGuess","playerMatch","rawUsername","distanceUsername","Done","terminate","initialAbsolutePointsScheme","useWindowSize","React","NotStarted","ocrProgress","ocrProgressText","images","setImages","setImagesURLs","setNbPlayers","setCpuLanguage","setPointsScheme","suggestionPlayers","setIncludeCpuPlayers","setTeams","setNbTeams","startOverConfirm","newPointsScheme","absolutePoints","newImageUrls","imageA","imageB","nameA","nameB","newNameA","newNameB","sortImagesByFilename","image","URL","createObjectURL","newLorenzi","createLorenzi","onClickStartOver","_e","onClickStartOverConfirm","window","location","reload","onChangeIndexRace","delta","newIndex","onChangeImage","files","onChangeNbPlayers","differencePlayerCount","newNbTeams","Number","teamNames","indexPointsScheme","newValue","copy","indexAbsolutePointsScheme","valueNumber","valueSafe","isNaN","abs","indexResultOcr","newVal","getOptionsTeams","classBgDisabled","missingTeamForPlayers","incorrectTeamForPlayers","seenTeams","validateTeams","validationPointsScheme","issueOnTeams","issueOnPointsScheme","guideFAQ","document","body","scrollHeight","innerHeight","numberOfPieces","recycle","minimumValue","maximumValue","initialValue","onChangeNumericStepper","thumbColor","stepValue","size","inactiveTrackColor","activeTrackColor","activeButtonColor","inactiveIconColor","hoverIconColor","activeIconColor","disabledIconColor","thumbShadowAnimationOnTrackHoverEnabled","focusRingColor","renderNumericStepperPlayers","jpgImage","pngImage","guideImage","multiple","accept","renderImagesUpload","imageSrc","colorText","classesText","renderStart","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.130f25e2.chunk.js","sourcesContent":["export enum Category {\n  Position = 'position',\n  Time = 'time',\n  Username = 'username',\n  All = 'all'\n}\n\nexport enum Progress {\n  NotStarted = 'not_started',\n  Started = 'started',\n  Done = 'done'\n}\n\nexport type Validation = {\n  correct: boolean;\n  errMsg: string;\n  isWarning?: boolean;\n};\n\nexport type LorenziTeam = {\n  name: string;\n  color: string;\n};\n\nexport type Coord = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nexport type Result = {\n  username: string;\n  position: number;\n  distanceUsername?: number;\n  points: number;\n  rawUsername?: string;\n};\n\nexport enum Sign {\n  Positive = '+',\n  Negative = '-'\n}\n","export const WEBSITE_LANGUAGE = 'en';\nexport const AUTHOR_NAME = 'sebranly';\nexport const AUTHOR_GITHUB = `https://${AUTHOR_NAME}.github.io`;\nexport const PROJECT_NAME = 'ctr-ocr';\nexport const JSON_FOLDER = 'ctr-ocr';\nexport const PROJECT_URL = `https://github.com/${AUTHOR_NAME}/${PROJECT_NAME}`;\nexport const CRASH_TEAM_RANKING_AUTHOR_URL = 'https://crashteamranking.com/members/siblingbling/tt/';\nexport const GUIDE_FOLDER = `${PROJECT_URL}/blob/main/doc/guide/${WEBSITE_LANGUAGE}/`;\nexport const DEBUG_MODE = false;\nexport const WEBSITE_TITLE = 'Crash Team Results';\nexport const WEBSITE_SUBTITLE = 'Optical Character Recognition';\nexport const WEBSITE_VERSION = '1.4.0';\nexport const WEBSITE_DEFAULT_LANGUAGE = 'en';\nexport const JSON_DATA_FOLDER = `${AUTHOR_GITHUB}/json/${JSON_FOLDER}`;\nexport const URL_CPUS = `${JSON_DATA_FOLDER}/players.json`;\nexport const URL_HUMAN_PLAYERS = `${JSON_DATA_FOLDER}/users.json`;\nexport const EXAMPLE_IMAGES_FOLDER = `https://raw.githubusercontent.com/${AUTHOR_NAME}/${PROJECT_NAME}/main/src/img/examples/`;\nexport const EXAMPLE_IMAGES_FOLDER_FULL_EVENT = `${PROJECT_URL}/tree/main/src/img/examples/full-event/`;\nexport const CHANGELOG_URL = `${PROJECT_URL}/releases`;\nexport const VIDEO_TUTORIAL = 'https://youtu.be/XjwoKGtEQag';\n","// In the game CTR:NF, once player 1 finishes, online players have 30 seconds to complete the race\n// The following is applicable to online races\nexport const CTR_MAX_TIME_DIFF_SEC = 30;\nexport const CTR_MAX_PLAYERS = 8;\nexport const MAX_HEIGHT_IMG = 1_000;\nexport const MIME_JPEG = 'image/jpeg';\nexport const MIME_PNG = 'image/png';\nexport const PSM_SINGLE_CHAR = '10';\nexport const PSM_SINGLE_LINE = '7';\nexport const SEPARATOR_PLAYERS = '|';\nexport const TIME_DNF = '--:--:--';\nexport const PLACEHOLDER_CPUS = 'Loading CPUs...';\nexport const OCR_LANGUAGE = 'eng';\n// There will always be a possibility for 2 teams\nexport const INITIAL_TEAMS_NB = 2;\nexport const LORENZI_TABLE_URL = 'https://gb.hlorenzi.com/table';\n","const cleanString = (str: string) => str.replaceAll('\\n', '').replaceAll(' ', '');\n\nconst getClosestString = (str: string, list: string[]) => {\n  const listSafe = list.filter((s: string) => !!s);\n  let min = Infinity;\n  let name = str;\n\n  listSafe.forEach((s: string) => {\n    const distance = getEditDistance(str, s);\n\n    if (distance < min) {\n      min = distance;\n      name = s;\n    }\n  });\n\n  return name;\n};\n\n/**\n * Simply called edit distance as it's a custom version of Levenshtein distance\n * We keep the score of 1 for addition and deletion\n * But we attribute a score between 0 and 1 (e.g. 0.5) for substitution,\n * based on the similarity of pattern of the two characters\n */\nconst getEditDistance = (str1: string, str2: string) => {\n  const newStr1 = str1 || '';\n  const newStr2 = str2 || '';\n\n  if (newStr1 === '') return newStr2.length;\n  if (newStr2 === '') return newStr1.length;\n\n  const distance: number[][] = [];\n\n  for (let i = 0; i <= newStr1.length; i++) {\n    const distanceLine: number[] = [];\n\n    for (let j = 0; j <= newStr2.length; j++) {\n      distanceLine.push(0);\n    }\n\n    distance.push(distanceLine);\n  }\n\n  for (let i = 1; i <= newStr1.length; i++) {\n    distance[i][0] = i;\n  }\n\n  for (let j = 1; j <= newStr2.length; j++) {\n    distance[0][j] = j;\n  }\n\n  for (let j = 1; j <= newStr2.length; j++) {\n    for (let i = 1; i <= newStr1.length; i++) {\n      const substitutionCost = getSubstitutionCost(newStr1[i - 1], newStr2[j - 1]);\n\n      distance[i][j] = Math.min(\n        distance[i - 1][j] + 1,\n        distance[i][j - 1] + 1,\n        distance[i - 1][j - 1] + substitutionCost\n      );\n    }\n  }\n\n  return distance[newStr1.length][newStr2.length];\n};\n\nconst getSubstitutionCost = (character1: string, character2: string) => {\n  if (character1.length !== 1 || character2.length !== 1) return 1;\n\n  const char1 = character1.charAt(0);\n  const char2 = character2.charAt(0);\n\n  if (char1 === char2) return 0;\n\n  // This is based on a manual feeling on the font from CTR:NF screenshots\n  if (charactersMatch(char1, char2, ['B', '8'])) return 0.5;\n  if (charactersMatch(char1, char2, ['-', '_'])) return 0.5;\n  if (charactersMatch(char1, char2, ['Z', '2'])) return 0.5;\n  if (charactersMatch(char1, char2, ['O', '0'])) return 0.5;\n  if (charactersMatch(char1, char2, ['l', '1'])) return 0.5;\n  if (charactersMatch(char1, char2, ['S', '5'])) return 0.5;\n\n  if (charactersMatch(char1, char2, ['Z', '7'])) return 0.75;\n  if (charactersMatch(char1, char2, ['o', '0'])) return 0.75;\n  if (charactersMatch(char1, char2, ['o', 'O'])) return 0.75;\n  if (charactersMatch(char1, char2, ['D', 'P'])) return 0.75;\n  if (charactersMatch(char1, char2, ['B', 'R'])) return 0.75;\n  if (charactersMatch(char1, char2, ['e', 'c'])) return 0.75;\n  if (charactersMatch(char1, char2, ['c', 'o'])) return 0.75;\n\n  return 1;\n};\n\nconst charactersMatch = (character1: string, character2: string, characters: [string, string]) => {\n  return characters.includes(character1) && characters.includes(character2);\n};\n\nconst charRange = (startChar: string, stopChar: string) => {\n  const startInt = startChar.charCodeAt(0);\n  const stopInt = stopChar.charCodeAt(0);\n  const result = [];\n\n  for (let i = startInt; i <= stopInt; i += 1) {\n    result.push(String.fromCharCode(i));\n  }\n\n  return result;\n};\n\nconst sortAlphanumeric = (strA: string, strB: string) => {\n  const regexAlpha = /[^a-zA-Z]/g;\n  const regexNumeric = /[^0-9]/g;\n\n  var newA = strA.replace(regexAlpha, '');\n  var newB = strB.replace(regexAlpha, '');\n\n  if (newA === newB) {\n    var aN = parseInt(strA.replace(regexNumeric, ''), 10);\n    var bN = parseInt(strB.replace(regexNumeric, ''), 10);\n    return aN === bN ? 0 : aN > bN ? 1 : -1;\n  }\n\n  return newA > newB ? 1 : -1;\n};\n\nconst sortCaseInsensitive = (a: string, b: string) => {\n  if (!a || !b) return 1;\n  const lowerA = a.toLowerCase();\n  const lowerB = b.toLowerCase();\n\n  if (lowerA === lowerB) return 0;\n\n  return lowerA > lowerB ? 1 : -1;\n};\n\nexport {\n  charRange,\n  charactersMatch,\n  cleanString,\n  getClosestString,\n  getEditDistance,\n  getSubstitutionCost,\n  sortAlphanumeric,\n  sortCaseInsensitive\n};\n","const numberRange = (min: number, max: number) => {\n  const numbers = [];\n  for (let i = min; i <= max; i += 1) numbers.push(i);\n  return numbers;\n};\n\nconst applyRatio = (ratio: number, nb: number) => Math.floor(ratio * nb);\n\nexport { applyRatio, numberRange };\n","import { uniq } from 'lodash';\nimport { CTR_MAX_PLAYERS } from '../constants';\nimport { numberRange } from './number';\nimport { charRange, sortAlphanumeric } from './string';\n\nconst getCharListPosition = () => numberRange(1, CTR_MAX_PLAYERS).join('');\nconst getCharListDigits = () => numberRange(0, 9).join('');\nconst getCharListTime = () => `${getCharListDigits()}:-`;\n\n/**\n * @deprecated Use getCharListFromUsernames instead\n */\nconst getCharListUsername = () => {\n  const charListUppercaseLetters = charRange('A', 'Z').join('');\n  const charListLowercaseLetters = charRange('a', 'z').join('');\n  const charListLetters = `${charListLowercaseLetters}${charListUppercaseLetters}`;\n\n  return `${charListLetters}${getCharListDigits()}:-_. `;\n};\n\nconst getCharListFromUsernames = (players: string[], cpuPlayers: string[], includeCpuPlayers: boolean) => {\n  const allLetters: string[] = [];\n  players.forEach((player: string) => {\n    allLetters.push(...player.split(''));\n  });\n\n  if (includeCpuPlayers) {\n    cpuPlayers.forEach((player: string) => {\n      allLetters.push(...player.split(''));\n    });\n  }\n\n  const newAllLetters = uniq(allLetters).sort(sortAlphanumeric);\n\n  return newAllLetters.join('');\n};\n\nexport { getCharListPosition, getCharListDigits, getCharListTime, getCharListUsername, getCharListFromUsernames };\n","import { PSM_SINGLE_CHAR, PSM_SINGLE_LINE } from '../constants';\nimport { Category } from '../types';\nimport { REGEX_TIME } from './regEx';\nimport { uniq } from 'lodash';\nimport { getCharListFromUsernames, getCharListPosition, getCharListTime } from './charList';\nimport { numberRange } from './number';\n\nconst formatCpuPlayers = (cpuPlayers: string[]) => {\n  if (!cpuPlayers || cpuPlayers.length === 0) return [];\n\n  return cpuPlayers.filter((s: string) => !!s).sort();\n};\n\nconst getPlayers = (players: string[]) => {\n  if (players.length === 0) return [];\n\n  return players.filter((s: string) => !!s);\n};\n\nconst isHumanPlayer = (player: string, humanPlayers: string[]) => {\n  const newHumanPlayers = getPlayers(humanPlayers);\n\n  if (newHumanPlayers.length === 0) return false;\n\n  return newHumanPlayers.includes(player);\n};\n\nconst getReferencePlayers = (humanPlayers: string[], cpuPlayers: string[], includeCpuPlayers: boolean) => {\n  const newHumanPlayers = getPlayers(humanPlayers);\n\n  if (newHumanPlayers.length === 0) return [];\n\n  if (!includeCpuPlayers) return newHumanPlayers;\n\n  const newCpuPlayers = getPlayers(cpuPlayers);\n\n  if (newCpuPlayers.length === 0) return newHumanPlayers;\n\n  return [...newHumanPlayers, ...newCpuPlayers];\n};\n\nconst positionIsValid = (position: string, max: number) => {\n  if (!position) return false;\n  const pos = Number(position);\n  const isValid = position.length === 1 && pos >= 1 && pos <= max;\n\n  return isValid;\n};\n\nconst convertToMs = (time: string) => {\n  const timeIsValid = REGEX_TIME.test(time);\n  if (!timeIsValid) return 0;\n\n  const splits = time.split(':');\n  if (splits.length < 3) return 0;\n  const [minutesStr, secondsStr, centisecondsStr] = splits;\n\n  const minutes = Number(minutesStr);\n  const seconds = Number(secondsStr);\n  const centiseconds = Number(centisecondsStr);\n\n  const milliseconds = centiseconds * 10 + seconds * 1_000 + minutes * 60 * 1_000;\n\n  return milliseconds;\n};\n\nconst getOptionsTeams = (nbPlayers: number) => {\n  if ([0, 1, 2].includes(nbPlayers)) return [nbPlayers];\n\n  const teams = uniq([nbPlayers, ...numberRange(2, nbPlayers - 1).sort((a, b) => a - b)]);\n\n  return teams;\n};\n\nconst getPositionString = (position: number) => {\n  if (position < 1) return `${position}`;\n\n  if ([11, 12, 13].includes(position)) return `${position}th`;\n\n  const lastDigit = position % 10;\n\n  if (lastDigit === 1) return `${position}st`;\n  if (lastDigit === 2) return `${position}nd`;\n  if (lastDigit === 3) return `${position}rd`;\n\n  return `${position}th`;\n};\n\nconst getParams = (category: Category, players: string[], cpuPlayers: string[], includeCpuPlayers: boolean) => {\n  const { Position, Time, Username } = Category;\n  const charList = getCharListFromUsernames(players, cpuPlayers, includeCpuPlayers);\n\n  switch (category) {\n    case Position:\n      return {\n        tessedit_char_whitelist: getCharListPosition(),\n        tessedit_pageseg_mode: PSM_SINGLE_CHAR as any\n      };\n\n    case Username:\n      return {\n        tessedit_char_whitelist: charList,\n        tessedit_pageseg_mode: PSM_SINGLE_LINE as any\n      };\n\n    case Time:\n    default:\n      return {\n        tessedit_char_whitelist: getCharListTime(),\n        tessedit_pageseg_mode: PSM_SINGLE_LINE as any\n      };\n  }\n};\n\nconst getTeamNames = (nbTeams: number) => {\n  if (nbTeams === 0) return [];\n\n  return numberRange(1, nbTeams).map((n: number) => `Team ${n}`);\n};\n\nconst getColorPlayer = (player: string, teams: string[], playerTeams: Record<string, string>) => {\n  const playerTeam = playerTeams[player];\n\n  if (!playerTeam) return 'black';\n\n  const index = teams.indexOf(playerTeam);\n\n  switch (index) {\n    case 0:\n      return 'blue';\n    case 1:\n      return 'red';\n    case 2:\n      return 'green';\n    case 3:\n      return 'orange';\n    case 4:\n      return 'purple';\n    case 5:\n      return 'brown';\n    case 6:\n      return 'grey';\n    default:\n      return 'black';\n  }\n};\n\nconst getColorHexadecimalTeam = (teamIndex: number) => {\n  switch (teamIndex) {\n    case 0:\n      return '#33CCFF';\n    case 1:\n      return '#FF4040';\n    case 2:\n      return '#008000';\n    case 3:\n      return '#FFA500';\n    case 4:\n      return '#6A0DAD';\n    case 5:\n      return '#964B00';\n    case 6:\n      return '#808080';\n    default:\n      // As it's used as a background, we use opposite of black here\n      return '#FFFFFF';\n  }\n};\n\nexport {\n  convertToMs,\n  formatCpuPlayers,\n  getOptionsTeams,\n  getPlayers,\n  getReferencePlayers,\n  getTeamNames,\n  getColorHexadecimalTeam,\n  getColorPlayer,\n  getPositionString,\n  getParams,\n  isHumanPlayer,\n  positionIsValid\n};\n","import { applyRatio } from './number';\nimport { CTR_MAX_PLAYERS, MIME_JPEG, MIME_PNG } from '../constants';\nimport { Category, Coord } from '../types';\nimport { sortAlphanumeric } from './string';\n\nconst getMimeType = (extension: string) => {\n  if (!extension) return MIME_JPEG;\n\n  const isPng = extension.toLowerCase() === 'png';\n\n  return isPng ? MIME_PNG : MIME_JPEG;\n};\n\n// TODO: for All, index is actually the number of players\nconst getExtract = (info: any, index = 0, category: Category) => {\n  const { width, height } = info;\n  const left = applyRatio(0.64, width);\n  const top = applyRatio(0.265, height);\n  const widthCrop = applyRatio(0.27, width);\n  const heightCrop = applyRatio(0.425, height);\n\n  if (category === Category.All) {\n    const ratioHeight = index / CTR_MAX_PLAYERS;\n    const extract: Coord = {\n      height: applyRatio(ratioHeight, heightCrop),\n      left,\n      top,\n      width: widthCrop\n    };\n\n    return extract;\n  }\n\n  const ratioTime = 0.73;\n  const ratioEnd = 0.03;\n  const ratioLeftOffsetName = 0.27;\n  const ratioEndPosition = 0.1;\n  const antiRatioTime = 1 - ratioTime - ratioEnd;\n\n  const rectangle = {\n    top: applyRatio(index / 8, heightCrop),\n    height: applyRatio(1 / 8, heightCrop)\n  };\n\n  const topExt = top + rectangle.top;\n  const heightExt = rectangle.height;\n\n  if (category === Category.Position) {\n    const extract: Coord = {\n      height: heightExt,\n      left: left,\n      top: topExt,\n      width: applyRatio(ratioEndPosition, widthCrop)\n    };\n\n    return extract;\n  }\n\n  const leftExtTime = left + applyRatio(ratioTime, widthCrop);\n  const widthExtTime = applyRatio(antiRatioTime, widthCrop);\n\n  const leftExtName = left + applyRatio(ratioLeftOffsetName, widthCrop);\n  const widthExtName = applyRatio(1 - antiRatioTime - ratioLeftOffsetName - ratioEnd, widthCrop);\n\n  const isTime = category === Category.Time;\n  const leftExt = isTime ? leftExtTime : leftExtName;\n  const widthExt = isTime ? widthExtTime : widthExtName;\n\n  const extract: Coord = {\n    height: heightExt,\n    left: leftExt,\n    top: topExt,\n    width: widthExt\n  };\n\n  return extract;\n};\n\nconst getFilenameWithoutExtension = (filename: string) => {\n  if (!filename) return '';\n\n  const splits = filename.split('.');\n\n  return splits[0];\n};\n\nconst sortImagesByFilename = (images: any[]) => {\n  if (images.length === 0) return [];\n  if (images.length === 1) return images;\n\n  const sortedImages = images.sort((imageA: any, imageB: any) => {\n    const { name: nameA } = imageA;\n    const { name: nameB } = imageB;\n\n    const newNameA = getFilenameWithoutExtension(nameA);\n    const newNameB = getFilenameWithoutExtension(nameB);\n\n    return sortAlphanumeric(newNameA, newNameB);\n  });\n\n  return sortedImages;\n};\n\nexport { getFilenameWithoutExtension, getMimeType, getExtract, sortImagesByFilename };\n","import { numberRange } from './number';\n\nconst isEqual = (a1: (number | string)[], a2: (number | string)[]) => {\n  if (a1.length !== a2.length) return false;\n  return a1.every((v, i) => v === a2[i]);\n};\n\nconst createArraySameValue = (length: number, value: any) => {\n  if (length === 0) return [];\n  if (length === 1) return [value];\n\n  return numberRange(1, length).map((_v: number) => value);\n};\n\nexport { createArraySameValue, isEqual };\n","import { uniq } from 'lodash';\nimport { convertToMs } from './index';\nimport { CTR_MAX_TIME_DIFF_SEC, TIME_DNF } from '../constants';\nimport { Result, Validation } from '../types';\nimport { REGEX_TIME } from './regEx';\nimport { isEqual } from './array';\n\nconst getIncorrectRaces = (resultsOcr: Result[][]) => {\n  const validationPoints = resultsOcr.map((race: Result[]) => validatePoints(race.map((race) => race.points)));\n  const validationUsernames = resultsOcr.map((race: Result[]) => validateUsernames(race.map((race) => race.username)));\n\n  const incorrectRaces: number[] = [];\n\n  validationPoints.forEach((validation: Validation, index: number) => {\n    if (!validation.correct) incorrectRaces.push(index + 1);\n  });\n\n  validationUsernames.forEach((validation: Validation, index: number) => {\n    if (!validation.correct && !incorrectRaces.includes(index + 1)) incorrectRaces.push(index + 1);\n  });\n\n  return incorrectRaces.sort((a, b) => a - b);\n};\n\nconst validatePoints = (points: number[]) => {\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  const copyPoints = [...points];\n\n  const sortedPoints = copyPoints.sort((a: number, b: number) => {\n    return b - a;\n  });\n\n  if (isEqual(sortedPoints, points)) {\n    validation.correct = true;\n\n    return validation;\n  }\n\n  validation.errMsg = 'Points should decrease from first to last place (ties are possible)';\n\n  return validation;\n};\n\nconst validateTeams = (players: string[], teams: string[], playerTeams: Record<string, string>) => {\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  const missingTeamForPlayers: string[] = [];\n  const incorrectTeamForPlayers: string[] = [];\n  const seenTeams: string[] = [];\n\n  players.forEach((player: string) => {\n    const team = playerTeams[player];\n    if (!team) {\n      missingTeamForPlayers.push(player);\n    }\n\n    if (!teams.includes(team)) {\n      incorrectTeamForPlayers.push(player);\n    }\n\n    if (teams.includes(team)) {\n      seenTeams.push(team);\n    }\n  });\n\n  if (missingTeamForPlayers.length > 0) {\n    validation.errMsg = `The following players have no assigned team: ${missingTeamForPlayers.join(', ')}`;\n    validation.isWarning = true;\n\n    return validation;\n  }\n\n  if (incorrectTeamForPlayers.length > 0) {\n    validation.errMsg = `The following players have an invalid team: ${incorrectTeamForPlayers.join(', ')}`;\n\n    return validation;\n  }\n\n  if (uniq(seenTeams).length === 1) {\n    validation.errMsg = 'You cannot have all players under the same team';\n\n    return validation;\n  }\n\n  validation.correct = true;\n  return validation;\n};\n\nconst validateUsernames = (usernames: string[]) => {\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  const empty = usernames.some((str: string) => !str);\n  if (empty) {\n    validation.errMsg = 'At least one username is missing';\n\n    return validation;\n  }\n\n  const uniqueUsernames = uniq(usernames);\n  if (uniqueUsernames.length !== usernames.length) {\n    validation.errMsg = 'At least one username is duplicated';\n\n    return validation;\n  }\n\n  validation.correct = true;\n  return validation;\n};\n\nconst validateTimes = (times: string[]) => {\n  const positionNotTime: number[] = [];\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  times.forEach((time: string, index: number) => {\n    const timeIsValid = REGEX_TIME.test(time) || time === TIME_DNF;\n\n    if (!timeIsValid) {\n      positionNotTime.push(index + 1);\n    }\n  });\n\n  if (positionNotTime.length > 0) {\n    validation.errMsg = `The following positions have incorrect formatted times: ${positionNotTime.join(', ')}`;\n    return validation;\n  }\n\n  const minIndexTimeDnf = times.indexOf(TIME_DNF);\n  if (minIndexTimeDnf !== -1) {\n    const positionAfterDnf = [];\n\n    for (let i = minIndexTimeDnf + 1; i < times.length; i++) {\n      if (times[i] !== TIME_DNF) {\n        positionAfterDnf.push(i + 1);\n      }\n    }\n\n    if (positionAfterDnf.length > 0) {\n      validation.errMsg = `The following positions finished after somebody that did not finish: ${positionAfterDnf.join(\n        ', '\n      )}`;\n\n      return validation;\n    }\n  }\n\n  const finishedTimesLength = minIndexTimeDnf !== -1 ? minIndexTimeDnf : times.length;\n  const finishedTimes = times.slice(0, finishedTimesLength);\n  const finishedTimesMs = finishedTimes.map(convertToMs);\n  const copyMs = [...finishedTimesMs];\n  const sortedTimesMs = copyMs.sort((a: number, b: number) => {\n    return a - b;\n  });\n\n  if (!isEqual(finishedTimesMs, sortedTimesMs)) {\n    validation.errMsg = `From position 1 to position ${finishedTimesLength}, times are not in chronological order`;\n\n    return validation;\n  }\n\n  if (sortedTimesMs.length > 1) {\n    const maxTime = sortedTimesMs[sortedTimesMs.length - 1];\n    const minTime = sortedTimesMs[0];\n\n    const diffTime = maxTime - minTime;\n    if (diffTime > CTR_MAX_TIME_DIFF_SEC * 1_000) {\n      validation.errMsg = `There are more than ${CTR_MAX_TIME_DIFF_SEC} seconds separating players`;\n\n      return validation;\n    }\n  }\n\n  validation.correct = true;\n  return validation;\n};\n\nexport { getIncorrectRaces, validatePoints, validateTeams, validateTimes, validateUsernames };\n","const formatDate = (dateTimestamp: number) => {\n  const d = new Date(dateTimestamp);\n  const month = `${d.getMonth() + 1}`;\n  const day = `${d.getDate()}`;\n  const year = `${d.getFullYear()}`;\n\n  const newMonth = month.length < 2 ? `0${month}` : month;\n  const newDay = day.length < 2 ? `0${day}` : day;\n\n  return [year, newMonth, newDay].join('-');\n};\n\nexport { formatDate };\n","import { getColorHexadecimalTeam } from '.';\nimport { SEPARATOR_PLAYERS } from '../constants';\nimport { LorenziTeam, Result } from '../types';\nimport { formatDate } from './date';\nimport { numberRange } from './number';\n\nconst createLorenzi = (\n  races: Result[][],\n  playerTeams: Record<string, string>,\n  nbTeams: number,\n  nbPlayers: number,\n  teams: string[],\n  includeCpuPlayers: boolean,\n  lorenziTeams: LorenziTeam[]\n) => {\n  // Presence of CPUs currently means there is no team\n  const isFFA = includeCpuPlayers || nbTeams === nbPlayers;\n\n  if (isFFA) return createLorenziFFA(races);\n\n  return createLorenziTeams(races, playerTeams, teams, lorenziTeams);\n};\n\nconst getInitialLorenziTeams = (nbTeams: number) => {\n  if (nbTeams === 0) return [];\n\n  const initialLorenziTeams: LorenziTeam[] = numberRange(0, nbTeams - 1).map((n: number) => {\n    return { name: `Team ${n + 1}`, color: getColorHexadecimalTeam(n) };\n  });\n\n  return initialLorenziTeams;\n};\n\nconst createLorenziTeams = (\n  races: Result[][],\n  playerTeams: Record<string, string>,\n  teams: string[],\n  lorenziTeams: LorenziTeam[]\n) => {\n  const playersPoints = createLorenziPlayersPoints(races);\n\n  const teamPlayersLines: string[] = [];\n\n  teams.forEach((team: string, indexTeam: number) => {\n    const lorenziTeam = lorenziTeams[indexTeam];\n    const { color, name } = lorenziTeam;\n    const teamLine = `${name} ${color}`;\n    teamPlayersLines.push(teamLine);\n\n    Object.keys(playerTeams).forEach((player: string) => {\n      if (playerTeams[player] === team) {\n        const pointsLine = playersPoints[player] || [];\n        const line = `${player} ${pointsLine.join(SEPARATOR_PLAYERS)}`;\n\n        teamPlayersLines.push(line);\n      }\n    });\n\n    teamPlayersLines.push('');\n  });\n\n  return [...createLorenziIntro(), '', ...teamPlayersLines];\n};\n\nconst createLorenziPlayersPoints = (races: Result[][]) => {\n  const playersPoints: Record<string, number[]> = {};\n\n  races.forEach((race: Result[]) => {\n    race.forEach((result: Result) => {\n      const { username } = result;\n\n      if (!Object.keys(playersPoints).includes(username)) {\n        playersPoints[username] = [];\n      }\n    });\n  });\n\n  races.forEach((race: Result[]) => {\n    Object.keys(playersPoints).forEach((username: string) => {\n      const relevantResult = race.find((result: Result) => result.username === username);\n\n      const points = relevantResult?.points ?? 0;\n\n      playersPoints[username].push(points);\n    });\n  });\n\n  return playersPoints;\n};\n\nconst createLorenziIntro = () => {\n  return ['#title Title', `#date ${formatDate(Date.now())}`];\n};\n\nconst createLorenziFFA = (races: Result[][]) => {\n  const playersPoints = createLorenziPlayersPoints(races);\n\n  const playersLines: string[] = [];\n\n  Object.keys(playersPoints).forEach((username: string) => {\n    const playerPoints = playersPoints[username];\n\n    const line = `${username} ${playerPoints.join(SEPARATOR_PLAYERS)}`;\n\n    playersLines.push(line);\n  });\n\n  return [...createLorenziIntro(), '', ...playersLines];\n};\n\nexport {\n  createLorenzi,\n  createLorenziFFA,\n  createLorenziTeams,\n  createLorenziIntro,\n  createLorenziPlayersPoints,\n  getInitialLorenziTeams\n};\n","import * as React from 'react';\nimport { CRASH_TEAM_RANKING_AUTHOR_URL, CHANGELOG_URL, PROJECT_URL, WEBSITE_VERSION } from '../constants/general';\n\nconst Footer = () => (\n  <>\n    <div className=\"mt2 text-center\">\n      Developed by{' '}\n      <a href={PROJECT_URL} rel=\"noopener noreferrer\" title=\"GitHub page for repository\" target=\"_blank\">\n        sebranly\n      </a>{' '}\n      (PSN:{' '}\n      <a\n        href={CRASH_TEAM_RANKING_AUTHOR_URL}\n        rel=\"noopener noreferrer\"\n        title=\"Crash Team Ranking for ZouGui28\"\n        target=\"_blank\"\n      >\n        ZouGui28\n      </a>\n      ) with ❤️\n    </div>\n    <div className=\"mt2 text-center\">\n      Website version{' '}\n      <a href={CHANGELOG_URL} rel=\"noopener noreferrer\" title=\"Website changelog\" target=\"_blank\">\n        {WEBSITE_VERSION}\n      </a>\n    </div>\n  </>\n);\n\nexport { Footer };\n","import * as React from 'react';\n\nexport interface BasicMsgProps {\n  msg: string;\n}\n\nconst BasicMsg: React.FC<BasicMsgProps> = (props) => {\n  const { msg } = props;\n\n  return <div className=\"text-center mb\">{msg}</div>;\n};\n\nexport { BasicMsg };\n","import * as React from 'react';\nimport { LorenziTeam } from '../types';\n\nexport interface LorenziVisualProps {\n  lorenziTeams: LorenziTeam[];\n  setLorenziTeams: React.Dispatch<React.SetStateAction<LorenziTeam[]>>;\n}\n\nconst LorenziVisual: React.FC<LorenziVisualProps> = (props) => {\n  const { lorenziTeams, setLorenziTeams } = props;\n\n  const onChangeProperty = (index: number, isName: boolean) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (lorenziTeams.length <= index) return;\n\n    const { value } = e.currentTarget;\n    const newLorenziTeams = [...lorenziTeams];\n\n    if (isName) newLorenziTeams[index].name = value;\n    else newLorenziTeams[index].color = value;\n\n    setLorenziTeams(newLorenziTeams);\n  };\n\n  const renderLorenziTeam = (team: LorenziTeam, index: number) => {\n    const { name, color } = team;\n\n    return (\n      <div className=\"mb\" key={index}>\n        <input className=\"mr\" onChange={onChangeProperty(index, true)} value={name} />\n        <input className=\"ml\" onChange={onChangeProperty(index, false)} type=\"color\" value={color} />\n      </div>\n    );\n  };\n\n  return <div className=\"text-center mb2\">{lorenziTeams.map(renderLorenziTeam)}</div>;\n};\n\nexport { LorenziVisual };\n","import { CTR_MAX_PLAYERS } from '../constants';\nimport { createArraySameValue } from './array';\n\n/**\n * Points generated here should be absolute values\n */\nconst getAbsolutePointsScheme = (nbPlayers: number, nbTeams: number, isRanked: boolean, isDoubleRush: boolean) => {\n  const pointsScheme: number[] = [];\n  const isFFA = nbTeams === nbPlayers;\n\n  /**\n   * Technically speaking, that could be a 1v3 for instance\n   * But score presets are a suggestion anyway\n   */\n  const isDuo = nbTeams === nbPlayers / 2;\n  const isTrio = nbTeams === nbPlayers / 3;\n  const isQuatuor = nbTeams === nbPlayers / 4;\n\n  if (isDoubleRush) pointsScheme.push(...[14, 12, 11, 9, 4, 3, 2, 1]);\n  else if (isRanked) {\n    if (isFFA) {\n      switch (nbPlayers) {\n        case 2:\n          pointsScheme.push(...[3, 1]);\n          break;\n        case 3:\n          pointsScheme.push(...[4, 2, 1]);\n          break;\n        case 4:\n          pointsScheme.push(...[5, 3, 2, 1]);\n          break;\n        case 5:\n          pointsScheme.push(...[6, 5, 3, 2, 1]);\n          break;\n        case 6:\n          pointsScheme.push(...[7, 6, 5, 3, 2, 1]);\n          break;\n        case 7:\n          pointsScheme.push(...[8, 7, 6, 4, 3, 2, 1]);\n          break;\n        case 8:\n          pointsScheme.push(...[9, 8, 7, 5, 4, 3, 2, 1]);\n          break;\n        default:\n          break;\n      }\n    } else if (isDuo) {\n      if (nbPlayers === 8) pointsScheme.push(...[8, 7, 6, 5, 4, 3, 2, 1]);\n      else if (nbPlayers === 6) pointsScheme.push(...[6, 5, 4, 3, 2, 1]);\n      else if (nbPlayers === 4) pointsScheme.push(...[4, 3, 2, 1]);\n    } else if (isTrio && nbPlayers === 6) {\n      pointsScheme.push(...[6, 5, 4, 3, 2, 1]);\n    } else if (isQuatuor && nbPlayers === 8) {\n      pointsScheme.push(...[10, 8, 6, 5, 4, 3, 2, 1]);\n    } else {\n      pointsScheme.push(...[9, 8, 7, 5, 4, 3, 2, 1]);\n    }\n  } else if (isFFA) {\n    pointsScheme.push(...[10, 8, 7, 5, 4, 3, 2, 1]);\n  } else {\n    if (nbPlayers === 4) pointsScheme.push(...[5, 3, 2, 1]);\n    else pointsScheme.push(...[10, 8, 6, 5, 4, 3, 2, 1]);\n  }\n\n  const slicedPointsScheme = pointsScheme.slice(0, nbPlayers);\n  const lengthDiff = CTR_MAX_PLAYERS - slicedPointsScheme.length;\n  if (lengthDiff <= 0) return slicedPointsScheme;\n  else {\n    const remaining = createArraySameValue(lengthDiff, 0) as number[];\n    return [...slicedPointsScheme, ...remaining];\n  }\n};\n\nexport { getAbsolutePointsScheme };\n","import * as React from 'react';\nimport { CTR_MAX_PLAYERS } from '../constants';\nimport { Sign } from '../types';\nimport { createArraySameValue, isEqual } from '../utils/array';\nimport { getAbsolutePointsScheme } from '../utils/points';\n\nexport interface PresetButtonProps {\n  className?: string;\n  name: string;\n  isDisabledUI: boolean;\n  pointsScheme: number[];\n  nbPlayers: number;\n  nbTeams: number;\n  isRanked: boolean;\n  isDoubleRush: boolean;\n  setSignPointsScheme: React.Dispatch<React.SetStateAction<Sign[]>>;\n  setAbsolutePointsScheme: React.Dispatch<React.SetStateAction<number[]>>;\n}\n\nconst PresetButton: React.FC<PresetButtonProps> = (props) => {\n  const {\n    className,\n    isDisabledUI,\n    isDoubleRush,\n    isRanked,\n    name,\n    nbPlayers,\n    nbTeams,\n    pointsScheme,\n    setAbsolutePointsScheme,\n    setSignPointsScheme\n  } = props;\n\n  const newAbsolutePointsScheme = getAbsolutePointsScheme(nbPlayers, nbTeams, isRanked, isDoubleRush);\n  const isSamePreset = isEqual(pointsScheme.slice(0, nbPlayers), newAbsolutePointsScheme.slice(0, nbPlayers));\n\n  return (\n    <button\n      className={className}\n      onClick={() => {\n        setSignPointsScheme(createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive));\n        setAbsolutePointsScheme(newAbsolutePointsScheme);\n      }}\n      disabled={isDisabledUI || isSamePreset}\n    >\n      {name}\n    </button>\n  );\n};\n\nexport { PresetButton };\n","import * as React from 'react';\n\nexport interface UsersInputsProps {\n  isDisabledUI: boolean;\n  suggestions: string[];\n  players: string[];\n  setPlayers: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst UsersInputs: React.FC<UsersInputsProps> = (props) => {\n  const { isDisabledUI, players, setPlayers, suggestions } = props;\n\n  const onChangeInput = (index: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (players.length <= index) return;\n\n    const { value } = e.currentTarget;\n    const newPlayers = [...players];\n\n    newPlayers[index] = value;\n\n    setPlayers(newPlayers);\n  };\n\n  const renderUserInput = (index: number) => {\n    const datalistIdString = `human-player-suggestion-${index}`;\n    return (\n      <div key={index}>\n        <input\n          className=\"mb mt big-input\"\n          disabled={isDisabledUI}\n          list={datalistIdString}\n          onChange={onChangeInput(index)}\n          value={players[index] || ''}\n        />\n        {renderDatalist(index)}\n      </div>\n    );\n  };\n\n  const renderDatalist = (datalistId: number) => {\n    const datalistIdString = `human-player-suggestion-${datalistId}`;\n    return (\n      <datalist id={datalistIdString}>\n        {suggestions.map((suggestion) => (\n          <option key={suggestion} value={suggestion} />\n        ))}\n      </datalist>\n    );\n  };\n\n  return <div>{players.map((_players, index) => renderUserInput(index))}</div>;\n};\n\nexport { UsersInputs };\n","import * as React from 'react';\nimport './App.css';\nimport { createWorker, createScheduler } from 'tesseract.js';\nimport { Category, LorenziTeam, Progress, Result, Sign } from './types';\nimport getColors from 'get-image-colors';\nimport Jimp from 'jimp';\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport Confetti from 'react-confetti';\nimport { isMobile } from 'react-device-detect';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { NumericStepper } from '@anatoliygatt/numeric-stepper';\n\nimport {\n  EXAMPLE_IMAGES_FOLDER,\n  EXAMPLE_IMAGES_FOLDER_FULL_EVENT,\n  GUIDE_FOLDER,\n  URL_CPUS,\n  URL_HUMAN_PLAYERS,\n  VIDEO_TUTORIAL,\n  WEBSITE_DEFAULT_LANGUAGE,\n  WEBSITE_TITLE,\n  WEBSITE_SUBTITLE\n} from './constants/general';\nimport {\n  CTR_MAX_PLAYERS,\n  INITIAL_TEAMS_NB,\n  LORENZI_TABLE_URL,\n  MAX_HEIGHT_IMG,\n  MIME_JPEG,\n  MIME_PNG,\n  OCR_LANGUAGE,\n  PLACEHOLDER_CPUS\n} from './constants';\nimport { cleanString, getClosestString, getEditDistance, sortCaseInsensitive } from './utils/string';\nimport {\n  formatCpuPlayers,\n  getColorPlayer,\n  getOptionsTeams,\n  getParams,\n  getPlayers,\n  getPositionString,\n  getReferencePlayers,\n  getTeamNames,\n  isHumanPlayer\n} from './utils';\nimport { numberRange } from './utils/number';\nimport { getExtract, getMimeType, sortImagesByFilename } from './utils/image';\nimport { logMsg, logTable, logTime } from './utils/log';\nimport { getIncorrectRaces, validatePoints, validateTeams, validateUsernames } from './utils/validation';\nimport { uniq } from 'lodash';\nimport { createArraySameValue } from './utils/array';\nimport { createLorenzi, getInitialLorenziTeams } from './utils/lorenzi';\nimport { Footer } from './components/Footer';\nimport { BasicMsg } from './components/BasicMsg';\nimport { LorenziVisual } from './components/LorenziVisual';\nimport { PresetButton } from './components/PresetButton';\nimport { getAbsolutePointsScheme } from './utils/points';\nimport { UsersInputs } from './components/UsersInputs';\n\nconst App = () => {\n  const renderProgressBar = () => {\n    if (ocrProgress !== Progress.Started) return null;\n\n    return (\n      <div className=\"progress-bar\">\n        <div className=\"progress-bar-value\"></div>\n        <div className=\"progress-bar-text\">{ocrProgressText}</div>\n      </div>\n    );\n  };\n\n  const renderTablePointsScheme = () => {\n    const classes = isMobile ? 'flex-1' : 'flex-1 max-width-50 center';\n    return (\n      <table className={classes}>\n        <thead>\n          <tr>\n            <th className=\"text-center\">Position</th>\n            <th className=\"text-center\">Points</th>\n          </tr>\n        </thead>\n        {renderBodyPointsScheme()}\n      </table>\n    );\n  };\n\n  const renderTable = (index: number) => {\n    const classes = isMobile ? 'flex-1 limited-table' : 'flex-1';\n\n    return (\n      <table className={classes}>\n        <thead>\n          <tr>\n            <th>Position</th>\n            {includeCpuPlayers && <th>Type</th>}\n            <th>Name</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        {renderBody(index)}\n      </table>\n    );\n  };\n\n  const renderCroppedImage = (index: number) => {\n    if (!croppedImages || croppedImages.length <= index) return null;\n\n    const classes = isMobile ? 'img-show max-width-100' : 'img-show max-width-45';\n\n    return <img alt=\"Cropped Results\" className={classes} src={croppedImages[index]} />;\n  };\n\n  const renderImages = () => {\n    if (issueOnPointsScheme || issueOnTeams) return null;\n\n    if (isMobile) {\n      return imagesURLs.map((imageSrc: string, index: number) => (\n        <img alt=\"TODO:\" className=\"img-full max-width-100 block\" key={`${imageSrc}-${index}`} src={imageSrc} />\n      ));\n    }\n\n    return (\n      <div className=\"flex-container center\">\n        {imagesURLs.map((imageSrc: string, index: number) => (\n          <img alt=\"TODO:\" className=\"img-full max-width-45 flex-1\" key={`${imageSrc}-${index}`} src={imageSrc} />\n        ))}\n      </div>\n    );\n  };\n\n  const renderBodyPointsScheme = () => {\n    const slicedPointsScheme = absolutePointsScheme.slice(0, nbPlayers);\n\n    return (\n      <tbody>\n        {slicedPointsScheme.map((_points: number, indexPoints: number) => {\n          const key = indexPoints;\n          const selectedSign = signPointsScheme[indexPoints];\n          const classesSelect = selectedSign === Sign.Positive ? 'green' : 'red';\n\n          return (\n            <tr key={key}>\n              <td className=\"text-center\">{getPositionString(indexPoints + 1)}</td>\n              <td className=\"text-center\">\n                <select\n                  disabled={disabledUI}\n                  onChange={onChangeSignPointsScheme(indexPoints)}\n                  className={classesSelect}\n                  value={selectedSign}\n                >\n                  {renderOptionsSign()}\n                </select>\n                <input\n                  className=\"ml text-center\"\n                  type=\"number\"\n                  min={0}\n                  value={absolutePointsScheme[indexPoints]}\n                  disabled={disabledUI}\n                  onChange={onChangeAbsolutePointsScheme(indexPoints)}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    );\n  };\n\n  const renderOptionsSign = () => {\n    const signs = [Sign.Positive, Sign.Negative];\n\n    return signs.map((sign: string) => {\n      return (\n        <option key={sign} label={sign} value={sign}>\n          {sign}\n        </option>\n      );\n    });\n  };\n\n  const renderBody = (index: number) => {\n    const renderOption = (option: string | number, indexOption: number) => {\n      const key = `${option}-${indexOption}`;\n      const label = `${option}`;\n      return (\n        <option key={key} label={label} value={option}>\n          {label}\n        </option>\n      );\n    };\n\n    const renderOptions = () => {\n      const optionsResultsPlayerHuman = getPlayers(players).sort(sortCaseInsensitive);\n      if (!includeCpuPlayers) {\n        return optionsResultsPlayerHuman.map(renderOption);\n      }\n\n      const optionsResultsPlayerCpu = getPlayers(cpuPlayers).sort(sortCaseInsensitive);\n\n      return (\n        <>\n          <optgroup key=\"human\" label=\"Human\">\n            {optionsResultsPlayerHuman.map(renderOption)}\n          </optgroup>\n          <optgroup key=\"cpus\" label=\"CPUs\">\n            {optionsResultsPlayerCpu.map(renderOption)}\n          </optgroup>\n        </>\n      );\n    };\n\n    const renderOptionsPoints = () => {\n      const optionsResultsPoints = uniq([...pointsScheme.slice(0, nbPlayers), 0]).sort((a, b) => b - a);\n\n      return optionsResultsPoints.map(renderOption);\n    };\n\n    const classesSelectPlayer = isMobile ? 'max-width-100' : '';\n\n    return (\n      <tbody>\n        {resultsOcr[index].map((resultOcr: Result, indexPlayer: number) => {\n          const { position, username, points } = resultOcr;\n          const key = `${position}-${username}`;\n\n          return (\n            <tr key={key}>\n              <td>{getPositionString(position)}</td>\n              {includeCpuPlayers && <td>{isHumanPlayer(username, players) ? '👤' : '🤖'}</td>}\n              <td>\n                <select\n                  className={classesSelectPlayer}\n                  onChange={onChangeResultsPlayer(index, indexPlayer)}\n                  value={username}\n                >\n                  {renderOptions()}\n                </select>\n              </td>\n              <td>\n                <select onChange={onChangeResultsPoints(index, indexPlayer)} value={points}>\n                  {renderOptionsPoints()}\n                </select>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    );\n  };\n\n  const renderRace = (index: number) => {\n    const labelRace = `Race ${index + 1}`;\n    const validationUsernames = validateUsernames(resultsOcr[index].map((r: Result) => r.username));\n    const validationPoints = validatePoints(resultsOcr[index].map((r: Result) => r.points));\n\n    return (\n      <div key={index}>\n        <h3>{labelRace}</h3>\n        {renderCroppedImage(index)}\n        <div className=\"flex-container mt\">{renderTable(index)}</div>\n        {!validationUsernames.correct && <div className=\"red\">{validationUsernames.errMsg}</div>}\n        {!validationPoints.correct && <div className=\"red\">{validationPoints.errMsg}</div>}\n      </div>\n    );\n  };\n\n  const renderRaces = () => {\n    if (!resultsOcr || resultsOcr.length <= indexRace) return null;\n\n    return (\n      <>\n        <hr />\n        <div className=\"center\">\n          <button disabled={startOverConfirm} onClick={onClickStartOver}>\n            Start Over\n          </button>\n          {startOverConfirm && (\n            <button className=\"block confirm-start-over\" onClick={onClickStartOverConfirm}>\n              Confirm and start from scratch\n            </button>\n          )}\n          <h2>Results</h2>\n          {renderRace(indexRace)}\n          {resultsOcr.length !== 1 && (\n            <div className=\"pagination-races mt2\">\n              <button\n                className=\"pagination-previous-race mr\"\n                disabled={indexRace === 0}\n                onClick={onChangeIndexRace(-1)}\n              >\n                Previous Race\n              </button>\n              <div className=\"inline ml mr\">{`Race ${indexRace + 1}/${resultsOcr.length}`}</div>\n              <button\n                className=\"pagination-next-race ml\"\n                disabled={indexRace === resultsOcr.length - 1}\n                onClick={onChangeIndexRace(1)}\n              >\n                Next Race\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderLorenzi = () => {\n    if (!resultsOcr || resultsOcr.length <= indexRace) return null;\n\n    const incorrectRaces = getIncorrectRaces(resultsOcr);\n\n    const labelError = `In order to access Lorenzi markdown please fix the errors present in the following race(s): ${incorrectRaces.join(\n      ', '\n    )}`;\n\n    const rowsLorenzi = (lorenzi.match(/\\n/g) || []).length + 1;\n\n    return (\n      <div className=\"center\">\n        <h2>Lorenzi</h2>\n        {incorrectRaces.length > 0 && <div className=\"red\">{labelError}</div>}\n        {incorrectRaces.length === 0 && (\n          <>\n            <CopyToClipboard options={{ message: '' }} text={lorenzi} onCopy={() => setCopiedLorenzi(true)}>\n              <button disabled={lorenzi === '' || copiedLorenzi} className=\"mt\">\n                {copiedLorenzi ? 'Copied' : 'Copy Lorenzi to clipboard'}\n              </button>\n            </CopyToClipboard>\n            <a\n              className=\"block mt mb\"\n              href={LORENZI_TABLE_URL}\n              rel=\"noopener noreferrer\"\n              title=\"Lorenzi Table website\"\n              target=\"_blank\"\n            >\n              Go to Lorenzi Table\n            </a>\n            {!includeCpuPlayers && !isFFA && (\n              <LorenziVisual lorenziTeams={lorenziTeams} setLorenziTeams={setLorenziTeams} />\n            )}\n            <textarea className={`textarea-${classPlatform}`} disabled={true} rows={rowsLorenzi} value={lorenzi} />\n          </>\n        )}\n      </div>\n    );\n  };\n\n  const renderCpuMainSection = () => {\n    return (\n      <>\n        <h3>CPUs</h3>\n        {renderCpuSection()}\n      </>\n    );\n  };\n\n  const renderPointsSchemeMainSection = () => {\n    if (issueOnTeams) return null;\n\n    return (\n      <>\n        <h3>Points</h3>\n        <BasicMsg msg=\"Choose a preset or edit each value individually for something more custom\" />\n        {renderPresets()}\n        {renderPointsSchemeSection()}\n        {!validationPointsScheme.correct && <div className=\"red\">{validationPointsScheme.errMsg}</div>}\n      </>\n    );\n  };\n\n  const renderPresets = () => {\n    const commonProps = {\n      isDisabledUI: disabledUI,\n      nbPlayers,\n      pointsScheme,\n      setAbsolutePointsScheme,\n      setSignPointsScheme\n    };\n\n    return (\n      <div className=\"mb\">\n        <PresetButton name=\"Ranked FFA\" isRanked={true} isDoubleRush={false} nbTeams={nbPlayers} {...commonProps} />\n        <PresetButton\n          name=\"Ranked WAR\"\n          className=\"ml\"\n          isRanked={true}\n          isDoubleRush={false}\n          nbTeams={nbTeams}\n          {...commonProps}\n        />\n        <PresetButton\n          name=\"Casual FFA\"\n          className=\"ml\"\n          isRanked={false}\n          isDoubleRush={false}\n          nbTeams={nbPlayers}\n          {...commonProps}\n        />\n        <PresetButton\n          name=\"Casual WAR\"\n          className=\"ml\"\n          isRanked={false}\n          isDoubleRush={false}\n          nbTeams={nbTeams}\n          {...commonProps}\n        />\n        <PresetButton\n          name=\"Double Rush\"\n          className=\"ml\"\n          isRanked={false}\n          isDoubleRush={true}\n          nbTeams={nbTeams}\n          {...commonProps}\n        />\n      </div>\n    );\n  };\n\n  const renderTeamMainSection = () => {\n    return (\n      <>\n        <h3>Teams</h3>\n        {renderTeamSection()}\n      </>\n    );\n  };\n\n  const renderStart = () => {\n    if (issueOnPointsScheme || issueOnTeams) return null;\n\n    const colorText = ocrProgress === Progress.Done ? 'orange' : 'red';\n    const classesText = `ml block mb bold ${colorText}`;\n    const text =\n      ocrProgress === Progress.Done\n        ? 'Images were analyzed successfully. Please check the results below are correct. Feel free to tweak any mistake below.'\n        : 'Please ensure all the information entered above is correct, as none of it can be edited afterwards.';\n\n    return (\n      <div className=\"text-center mb\">\n        <div className={classesText}>{text}</div>\n        <input\n          className=\"inline-block ml\"\n          type=\"button\"\n          value=\"Get results\"\n          disabled={disabledUI || !imagesURLs || imagesURLs.length === 0}\n          onClick={doOCR}\n        />\n      </div>\n    );\n  };\n\n  const renderNumericStepperPlayers = () => {\n    const minimumValue = disabledUI ? nbPlayers : 2;\n    const maximumValue = disabledUI ? nbPlayers : CTR_MAX_PLAYERS;\n    const initialValue = disabledUI ? nbPlayers : CTR_MAX_PLAYERS;\n    const onChangeNumericStepper = disabledUI ? () => {} : onChangeNbPlayers;\n    const thumbColor = disabledUI ? '#999999' : '#3385FF';\n\n    return (\n      <div className=\"numeric-stepper-wrapper\">\n        <NumericStepper\n          minimumValue={minimumValue}\n          maximumValue={maximumValue}\n          stepValue={1}\n          initialValue={initialValue}\n          size=\"sm\"\n          inactiveTrackColor=\"#dddddd\"\n          activeTrackColor=\"#ffffff\"\n          activeButtonColor=\"#ffffff\"\n          inactiveIconColor=\"#3385FF\"\n          hoverIconColor=\"#000080\"\n          activeIconColor=\"#000080\"\n          disabledIconColor=\"#dddddd\"\n          thumbColor={thumbColor}\n          thumbShadowAnimationOnTrackHoverEnabled={false}\n          focusRingColor=\"#fff7ed\"\n          onChange={onChangeNumericStepper}\n        />\n      </div>\n    );\n  };\n\n  const renderImagesUpload = () => {\n    const jpgImage = `${EXAMPLE_IMAGES_FOLDER}IMG1.JPG`;\n    const pngImage = `${EXAMPLE_IMAGES_FOLDER}IMG1.PNG`;\n    const guideImage = `${GUIDE_FOLDER}Images.md`;\n\n    if (issueOnPointsScheme || issueOnTeams) return null;\n\n    return (\n      <>\n        <h2>Images</h2>\n        <div className=\"text-center mb\">\n          <div className=\"ml block mb bold\">Screenshots will be ordered alphabetically by name</div>\n          <div className=\"ml block mb\">\n            Select screenshots in JPG/JPEG or PNG format, taken right when Returning to Lobby was around 14 seconds\n          </div>\n          <div className=\"ml block mb\">\n            Examples of valid screenshots:{' '}\n            <a href={jpgImage} rel=\"noopener noreferrer\" title=\"Example of valid JPEG screenshot\" target=\"_blank\">\n              JPG/JPEG\n            </a>{' '}\n            and{' '}\n            <a href={pngImage} rel=\"noopener noreferrer\" title=\"Example of valid PNG screenshot\" target=\"_blank\">\n              PNG\n            </a>\n          </div>\n          <div className=\"ml block mb\">\n            You can upload multiple images at once, as in this{' '}\n            <a\n              href={EXAMPLE_IMAGES_FOLDER_FULL_EVENT}\n              rel=\"noopener noreferrer\"\n              title=\"Example of a valid 10-race event\"\n              target=\"_blank\"\n            >\n              10-race example\n            </a>\n          </div>\n          <div className=\"ml block mb\">\n            For more information, please refer to the{' '}\n            <a href={guideImage} rel=\"noopener noreferrer\" title=\"Guide about Images\" target=\"_blank\">\n              images guide\n            </a>\n          </div>\n          <input\n            className=\"inline mt\"\n            disabled={disabledUI}\n            type=\"file\"\n            multiple\n            accept={[MIME_JPEG, MIME_PNG].join(', ')}\n            onChange={onChangeImage}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const renderMainSection = () => {\n    if (nbPlayersTyped === 0) return null;\n\n    return (\n      <>\n        {renderCpuMainSection()}\n        {renderTeamMainSection()}\n        {renderPointsSchemeMainSection()}\n        {renderImagesUpload()}\n        {renderImages()}\n        {renderStart()}\n        {renderRaces()}\n        {renderLorenzi()}\n      </>\n    );\n  };\n\n  const renderPointsSchemeSection = () => {\n    return renderTablePointsScheme();\n  };\n\n  const renderTeamSection = () => {\n    if (includeCpuPlayers) return <BasicMsg msg=\"Teams are not available when CPUs are activated\" />;\n\n    return (\n      <>\n        <select disabled={disabledUI} onChange={onChangeNbTeams} value={nbTeams}>\n          {optionsNbTeams.map((option: number) => {\n            const label = option === nbPlayers ? 'FFA' : `${option} teams`;\n            return (\n              <option key={option} label={label} value={option}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n        {renderTeamRepartition()}\n      </>\n    );\n  };\n\n  const onChangeTeam = (player: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newPlayerTeams = { ...playerTeams, [player]: value };\n    setPlayerTeams(newPlayerTeams);\n  };\n\n  const renderPlayerTeams = (player: string) => {\n    return teams.map((team: string) => {\n      const key = `${player}-${team}`;\n      const isChecked = playerTeams[player] === team;\n\n      return (\n        <div className=\"ml inline\" key={key}>\n          <input\n            type=\"radio\"\n            disabled={disabledUI}\n            id={key}\n            name={player}\n            value={team}\n            checked={isChecked}\n            onChange={onChangeTeam(player)}\n          />\n          <label htmlFor={key}>{team}</label>\n        </div>\n      );\n    });\n  };\n\n  const renderPlayerTeamRepartition = (player: string) => {\n    const colorPlayer = getColorPlayer(player, teams, playerTeams);\n    const playerClassnames = `inline ${colorPlayer}`;\n\n    return (\n      <li className=\"block\" key={player}>\n        <div className={playerClassnames}>{player}</div>\n        <div className=\"ml mb block text-center\">{renderPlayerTeams(player)}</div>\n      </li>\n    );\n  };\n\n  const renderTeamRepartition = () => {\n    if (includeCpuPlayers) return null;\n    if (isFFA) return <div className=\"ml block mb\">Free For All means there is no need to set up teams!</div>;\n\n    const classesValidation = validationTeams.isWarning ? 'orange' : 'red';\n\n    return (\n      <>\n        <ul className=\"text-center no-padding mt2\">\n          <div className=\"inline-block\">{playersNames.map(renderPlayerTeamRepartition)}</div>\n          {!validationTeams.correct && <div className={classesValidation}>{validationTeams.errMsg}</div>}\n        </ul>\n      </>\n    );\n  };\n\n  const renderCpuSection = () => {\n    if (!cpuData || Object.keys(cpuData).length === 0) return <BasicMsg msg={PLACEHOLDER_CPUS} />;\n\n    const guideCpu = `${GUIDE_FOLDER}CPUs.md`;\n\n    const optionsCpuLanguages = Object.keys(cpuData);\n    const textCheckbox = shouldIncludeCpuPlayers\n      ? `Automatically activated bots because ${nbPlayersTyped} human player(s) was/were filled out of a total of ${nbPlayers} players`\n      : 'Check this if there were bots during the race';\n\n    return (\n      <>\n        <div className=\"text-center mb\">\n          <input\n            name=\"includeCpuPlayers\"\n            type=\"checkbox\"\n            checked={includeCpuPlayers}\n            onChange={onCpuCheckboxChange}\n            disabled={shouldIncludeCpuPlayers || disabledUI}\n          />\n          <div className=\"ml inline\">{textCheckbox}</div>\n        </div>\n        {includeCpuPlayers && (\n          <>\n            <BasicMsg msg=\"Bots are automatically determined based on the language and cannot be edited\" />\n            <div className=\"ml block mb\">\n              For more information, please refer to the{' '}\n              <a href={guideCpu} rel=\"noopener noreferrer\" title=\"Guide about CPUs\" target=\"_blank\">\n                CPUs guide\n              </a>\n            </div>\n            <div className=\"inline mr\">Language in images</div>\n            <select disabled={disabledUI} onChange={onChangeCpuLanguage} value={cpuLanguage}>\n              {optionsCpuLanguages.map((option: string) => {\n                const label = `${option}`;\n                return (\n                  <option key={option} label={label} value={option}>\n                    {label}\n                  </option>\n                );\n              })}\n            </select>\n            <textarea\n              className={`textarea-${classPlatform}`}\n              disabled={true}\n              placeholder={PLACEHOLDER_CPUS}\n              rows={CTR_MAX_PLAYERS}\n              value={cpuPlayers.join('\\n')}\n            />\n          </>\n        )}\n      </>\n    );\n  };\n\n  const onMount = async () => {\n    // TODO: initialize?\n    setOnMountOver(true);\n    setDisabledUI(false);\n    fetch(URL_CPUS)\n      .then((response) => response.json())\n      .then((data) => {\n        setCpuData(data);\n        setCpuPlayers(formatCpuPlayers((data as any)[WEBSITE_DEFAULT_LANGUAGE]));\n      });\n\n    fetch(URL_HUMAN_PLAYERS)\n      .then((response) => response.json())\n      .then((data) => {\n        const { playstation, switch: nintendo, xbox } = data;\n        const newSuggestionPlayers: string[] = [];\n\n        if (playstation) newSuggestionPlayers.push(...playstation);\n        if (nintendo) newSuggestionPlayers.push(...nintendo);\n        if (xbox) newSuggestionPlayers.push(...xbox);\n\n        setSuggestionPlayers(newSuggestionPlayers);\n      });\n  };\n\n  const doOCR = async () => {\n    if (!onMountOver) return;\n\n    setDisabledUI(true);\n    setOcrProgress(Progress.Started);\n    setOcrProgressText('Initialization...');\n    setResultsOcr([]);\n    setIndexRace(0);\n    setCroppedImages([]);\n    setLorenzi('');\n    setStartOverConfirm(false);\n\n    const schedulerUsername = createScheduler();\n\n    const workerUsername = createWorker({\n      // logger: (m: any) => console.log(m)\n    });\n\n    schedulerUsername.addWorker(workerUsername);\n\n    await workerUsername.load();\n    await workerUsername.loadLanguage(OCR_LANGUAGE);\n    await workerUsername.initialize(OCR_LANGUAGE);\n    const usernameParams = getParams(Category.Username, getPlayers(players), getPlayers(cpuPlayers), includeCpuPlayers);\n\n    await workerUsername.setParameters(usernameParams);\n\n    const playerIndexes = numberRange(0, nbPlayers - 1);\n\n    const promisesX = async (\n      playerIndex: number,\n      category: Category,\n      info: any, // TODO: type it better\n      imgTransCopy: any\n    ) => {\n      const scheduler = schedulerUsername;\n      const dimensions = getExtract(info, playerIndex, category);\n      const { extension } = info;\n      const mimeType = getMimeType(extension);\n\n      const extracted = imgTransCopy.crop(dimensions.left, dimensions.top, dimensions.width, dimensions.height);\n      const options = {\n        count: 2,\n        type: mimeType\n      };\n\n      const buffer: any = await extracted.getBufferAsync(mimeType);\n      const rgb = await getColors(buffer, options).then((colors: any) => {\n        return [colors[0].rgb(), colors[1].rgb()];\n      });\n\n      const shouldInvert = rgb[0][0] < rgb[1][0] && rgb[0][1] < rgb[1][1] && rgb[0][2] < rgb[1][2];\n      const extractedFin = shouldInvert ? extracted.invert() : extracted;\n\n      const bufferFin: any = await extractedFin.getBufferAsync(mimeType);\n      return scheduler.addJob('recognize', bufferFin);\n    };\n\n    let resultsOcrTemp: Result[][] = [];\n    let croppedImagesTemp: string[] = [];\n\n    // TODO: have better error handling\n    for (let i = 0; i < imagesURLs.length; i++) {\n      try {\n        const progressText = `Image ${i + 1} out of ${imagesURLs.length}...`;\n        setOcrProgressText(progressText);\n\n        logTime('imgRead');\n        const imgJimpTemp = await Jimp.read(imagesURLs[i]);\n        logTime('imgRead', true);\n\n        const initialHeight = imgJimpTemp.bitmap.height;\n        const shouldResize = initialHeight > MAX_HEIGHT_IMG;\n\n        if (shouldResize) logTime('imgResize');\n\n        const imgJimp = shouldResize ? imgJimpTemp.resize(Jimp.AUTO, MAX_HEIGHT_IMG) : imgJimpTemp;\n\n        if (shouldResize) logTime('imgResize', true);\n\n        logTime('imgRotate');\n\n        const imgTrans = imgJimp.rotate(-6.2);\n\n        logTime('imgRotate', true);\n\n        logTime('imgRest');\n\n        const h = imgTrans.bitmap.height;\n        const w = imgTrans.bitmap.width;\n        const extension = imgTrans.getExtension();\n        const info = { height: h, extension, width: w };\n        const dimensionsCrop = getExtract(info, nbPlayers, Category.All);\n\n        const imgTransCopy = imgTrans.clone();\n        const extractedCrop = imgTransCopy.crop(\n          dimensionsCrop.left,\n          dimensionsCrop.top,\n          dimensionsCrop.width,\n          dimensionsCrop.height\n        );\n\n        // eslint-disable-next-line no-loop-func\n        extractedCrop.getBase64(MIME_JPEG, (err: any, src: string) => {\n          croppedImagesTemp.push(src);\n        });\n\n        const imgTransGray = imgTrans.grayscale();\n\n        logTime('imgRest', true);\n\n        logTime('promisesCreation');\n\n        const promisesNames = playerIndexes.map((playerIndex) =>\n          promisesX(playerIndex, Category.Username, info, imgTransGray.clone())\n        );\n\n        logTime('promisesCreation', true);\n\n        logTime('promisesResolve');\n\n        const results = await Promise.all(promisesNames);\n\n        logTime('promisesResolve', true);\n\n        const resultsNames = results.map((r) => cleanString((r as any).data.text));\n\n        logMsg('resultsNames');\n        logMsg(resultsNames);\n\n        const dataResults: Result[] = [];\n        const referencePlayers = getReferencePlayers(players, cpuPlayers, includeCpuPlayers);\n        const csv: (string | number)[][] = [];\n        playerIndexes.forEach((playerIndex) => {\n          const playerGuess = resultsNames[playerIndex];\n          const playerMatch = getClosestString(playerGuess, referencePlayers);\n          const result: Result = {\n            username: playerMatch,\n            rawUsername: playerGuess,\n            distanceUsername: getEditDistance(playerMatch, playerGuess),\n            position: playerIndex + 1,\n            points: pointsScheme[playerIndex]\n          };\n\n          csv.push([result.username, result.rawUsername ?? '', result.distanceUsername ?? result.username.length]);\n\n          dataResults.push(result);\n        });\n\n        logTable(csv);\n\n        resultsOcrTemp.push(dataResults);\n      } catch (err) {\n        // TODO: have better error handling\n        logMsg(err);\n        // setDisabledUI(false);\n      }\n    }\n\n    setResultsOcr(resultsOcrTemp);\n    setCroppedImages(croppedImagesTemp);\n    setOcrProgress(Progress.Done);\n    setOcrProgressText('');\n    // setDisabledUI(false);\n\n    await schedulerUsername.terminate();\n  };\n\n  const initialAbsolutePointsScheme = getAbsolutePointsScheme(CTR_MAX_PLAYERS, CTR_MAX_PLAYERS, false, false);\n\n  const { width } = useWindowSize();\n  const [ocrProgress, setOcrProgress] = React.useState(Progress.NotStarted);\n  const [ocrProgressText, setOcrProgressText] = React.useState('');\n  const [images, setImages] = React.useState<any[]>([]);\n  const [imagesURLs, setImagesURLs] = React.useState<any[]>([]);\n  const [croppedImages, setCroppedImages] = React.useState<any[]>([]);\n  const [nbPlayers, setNbPlayers] = React.useState(CTR_MAX_PLAYERS);\n  const [cpuLanguage, setCpuLanguage] = React.useState(WEBSITE_DEFAULT_LANGUAGE);\n  const [disabledUI, setDisabledUI] = React.useState(true);\n  const [onMountOver, setOnMountOver] = React.useState(false);\n  const [resultsOcr, setResultsOcr] = React.useState<Result[][]>([]);\n  const [players, setPlayers] = React.useState<string[]>(createArraySameValue(CTR_MAX_PLAYERS, ''));\n\n  const [pointsScheme, setPointsScheme] = React.useState<number[]>(initialAbsolutePointsScheme);\n  const [absolutePointsScheme, setAbsolutePointsScheme] = React.useState<number[]>(initialAbsolutePointsScheme);\n  const [signPointsScheme, setSignPointsScheme] = React.useState<Sign[]>(\n    createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive)\n  );\n\n  const [copiedLorenzi, setCopiedLorenzi] = React.useState(false);\n  const [cpuPlayers, setCpuPlayers] = React.useState([PLACEHOLDER_CPUS]);\n  const [suggestionPlayers, setSuggestionPlayers] = React.useState<string[]>([]);\n  const [cpuData, setCpuData] = React.useState<any>({});\n  const [includeCpuPlayers, setIncludeCpuPlayers] = React.useState(false);\n  const [teams, setTeams] = React.useState<string[]>(getTeamNames(INITIAL_TEAMS_NB));\n  const [lorenziTeams, setLorenziTeams] = React.useState<LorenziTeam[]>(getInitialLorenziTeams(INITIAL_TEAMS_NB));\n  const [nbTeams, setNbTeams] = React.useState(INITIAL_TEAMS_NB);\n  const [playerTeams, setPlayerTeams] = React.useState<Record<string, string>>({});\n  const [indexRace, setIndexRace] = React.useState(0);\n  const [lorenzi, setLorenzi] = React.useState('');\n  const [startOverConfirm, setStartOverConfirm] = React.useState(false);\n\n  const nbPlayersTyped = uniq(getPlayers(players)).length;\n  const shouldIncludeCpuPlayers = nbPlayersTyped < nbPlayers;\n\n  React.useEffect(() => {\n    onMount();\n  }, []);\n\n  React.useEffect(() => {\n    const copy = [...absolutePointsScheme];\n    const newPointsScheme = copy.map((absolutePoints: number, index: number) => {\n      const multiplier = signPointsScheme[index] === Sign.Negative ? -1 : 1;\n      return multiplier * absolutePoints;\n    });\n\n    setPointsScheme(newPointsScheme);\n    logMsg('newPointsScheme');\n    logMsg(newPointsScheme);\n  }, [absolutePointsScheme, signPointsScheme]);\n\n  React.useEffect(() => {\n    if (images.length < 1) return;\n    const newImageUrls: any[] = [];\n    const sortImages = sortImagesByFilename(images);\n    sortImages.forEach((image) => {\n      newImageUrls.push(URL.createObjectURL(image));\n    });\n    setImagesURLs(newImageUrls);\n  }, [images]);\n\n  React.useEffect(() => {\n    if (resultsOcr && resultsOcr.length > 0) {\n      const newLorenzi = createLorenzi(\n        resultsOcr,\n        playerTeams,\n        nbTeams,\n        nbPlayers,\n        teams,\n        includeCpuPlayers,\n        lorenziTeams\n      );\n\n      setLorenzi(newLorenzi.join('\\n'));\n      setCopiedLorenzi(false);\n    }\n  }, [resultsOcr, lorenziTeams]);\n\n  React.useEffect(() => {\n    if (shouldIncludeCpuPlayers && !includeCpuPlayers) {\n      setIncludeCpuPlayers(true);\n    }\n  }, [shouldIncludeCpuPlayers, includeCpuPlayers]);\n\n  React.useEffect(() => {\n    setNbTeams(INITIAL_TEAMS_NB);\n    setTeams(getTeamNames(INITIAL_TEAMS_NB));\n    setLorenziTeams(getInitialLorenziTeams(INITIAL_TEAMS_NB));\n    setPlayerTeams({});\n  }, [players]);\n\n  const onClickStartOver = (_e: any) => {\n    setStartOverConfirm(true);\n  };\n\n  const onClickStartOverConfirm = (_e: any) => {\n    window.location.reload();\n  };\n\n  const onChangeIndexRace = (delta: number) => (_e: any) => {\n    const newIndex = indexRace + delta;\n\n    if (newIndex < 0 || newIndex >= resultsOcr.length) return;\n\n    setIndexRace(newIndex);\n  };\n\n  const onChangeImage = (e: any) => {\n    setImages([...e.target.files]);\n    setResultsOcr([]);\n  };\n\n  const onChangeNbPlayers = (value: number) => {\n    if (value === nbPlayers) return;\n\n    /*\n      Due to Numeric Stepper not using value prop\n      we should only call this from Numeric Stepper\n    */\n    setNbPlayers(value);\n\n    const differencePlayerCount = value - nbPlayers;\n    const newPlayers =\n      differencePlayerCount > 0\n        ? [...players, ...createArraySameValue(differencePlayerCount, '')]\n        : players.slice(0, value);\n\n    setPlayers(newPlayers);\n\n    setNbTeams(INITIAL_TEAMS_NB);\n    setTeams(getTeamNames(INITIAL_TEAMS_NB));\n    setLorenziTeams(getInitialLorenziTeams(INITIAL_TEAMS_NB));\n    setPlayerTeams({});\n  };\n\n  const onChangeNbTeams = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newNbTeams = Number(e.target.value);\n    const teamNames = getTeamNames(newNbTeams);\n\n    setNbTeams(newNbTeams);\n    setTeams(teamNames);\n    setLorenziTeams(getInitialLorenziTeams(newNbTeams));\n    setPlayerTeams({});\n  };\n\n  const onChangeCpuLanguage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setCpuLanguage(e.target.value);\n    setCpuPlayers(formatCpuPlayers(cpuData[e.target.value]));\n  };\n\n  const onChangeSignPointsScheme = (indexPointsScheme: number) => (e: React.ChangeEvent<HTMLSelectElement>) => {\n    if (!signPointsScheme || signPointsScheme.length < indexPointsScheme) return;\n    const { value } = e.target;\n    const newValue = value === Sign.Positive ? Sign.Positive : Sign.Negative;\n    const copy = [...signPointsScheme];\n    copy[indexPointsScheme] = newValue;\n    setSignPointsScheme(copy);\n    logMsg('new signPointsScheme');\n    logMsg(copy);\n  };\n\n  const onChangeAbsolutePointsScheme =\n    (indexAbsolutePointsScheme: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (!absolutePointsScheme || absolutePointsScheme.length < indexAbsolutePointsScheme) return;\n      const { value } = e.currentTarget;\n      const copy = [...absolutePointsScheme];\n      const valueNumber = Number(value);\n      const valueSafe = isNaN(valueNumber) ? 0 : valueNumber;\n      copy[indexAbsolutePointsScheme] = Math.abs(valueSafe);\n      setAbsolutePointsScheme(copy);\n    };\n\n  const onChangeResultsPoints =\n    (indexResultOcr: number, indexPlayer: number) => (e: React.ChangeEvent<HTMLSelectElement>) => {\n      if (!resultsOcr || resultsOcr.length < indexResultOcr) return;\n      const copy = [...resultsOcr];\n      copy[indexResultOcr][indexPlayer].points = Number(e.target.value);\n      setResultsOcr(copy);\n    };\n\n  const onChangeResultsPlayer =\n    (indexResultOcr: number, indexPlayer: number) => (e: React.ChangeEvent<HTMLSelectElement>) => {\n      if (!resultsOcr || resultsOcr.length < indexResultOcr) return;\n      const copy = [...resultsOcr];\n      copy[indexResultOcr][indexPlayer].username = e.target.value;\n      setResultsOcr(copy);\n    };\n\n  const onCpuCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newVal = e.target.checked;\n    setIncludeCpuPlayers(newVal);\n  };\n\n  const optionsNbTeams = getOptionsTeams(nbPlayers);\n  const classPlatform = isMobile ? 'mobile' : 'desktop';\n  const classBgDisabled = disabledUI && (!resultsOcr || resultsOcr.length === 0) ? 'bg-grey' : 'bg-white';\n  const playersNames = uniq(getPlayers(players)).sort(sortCaseInsensitive);\n  const validationTeams = validateTeams(playersNames, teams, playerTeams);\n  const validationPointsScheme = validatePoints(pointsScheme.slice(0, nbPlayers));\n  const isFFA = nbTeams === nbPlayers;\n  const issueOnTeams = !includeCpuPlayers && !isFFA && !validationTeams.correct;\n  const issueOnPointsScheme = !validationPointsScheme.correct;\n  const guideFAQ = `${GUIDE_FOLDER}FAQ.md`;\n\n  return (\n    <div className=\"main\">\n      <h1>{WEBSITE_TITLE}</h1>\n      <h2>{WEBSITE_SUBTITLE}</h2>\n      <div className=\"w3-light-grey\"></div>\n      {ocrProgress === Progress.Done && (\n        <Confetti\n          width={width}\n          height={document.body.scrollHeight > window.innerHeight ? document.body.scrollHeight : window.innerHeight}\n          numberOfPieces={isMobile ? 800 : 1600}\n          recycle={false}\n        />\n      )}\n      <div className={`text-center main-content-${classPlatform} m-0-auto-mb2 bg-orange`}>\n        <div className=\"text-left mb black\">\n          <b>March 2024 Update:</b> this website address (URL) will be changed as follows:\n          <br />\n          <div>\n            The URL{' '}\n            <a\n              href=\"https://www.crashteamresults.com/\"\n              rel=\"noopener noreferrer\"\n              title=\"Old URL address of Crash Team Results\"\n              target=\"_blank\"\n            >\n              https://www.crashteamresults.com/\n            </a>{' '}\n            will stop working in April 2024.\n          </div>\n          <div>\n            The URL{' '}\n            <a\n              href=\"https://sebranly.github.io/ctr-ocr/\"\n              rel=\"noopener noreferrer\"\n              title=\"New URL address of Crash Team Results\"\n              target=\"_blank\"\n            >\n              https://sebranly.github.io/ctr-ocr/\n            </a>{' '}\n            will become the new one (it is already active).\n          </div>\n          <br />\n          To ensure that you can access this website in the future, please add the following address to your bookmarks:\n          <b>\n            <div>https://sebranly.github.io/ctr-ocr/</div>\n          </b>\n        </div>\n      </div>\n      <div className={`center main-content-${classPlatform} m-0-auto ${classBgDisabled}`}>\n        {renderProgressBar()}\n        <h2>Introduction</h2>\n        <BasicMsg msg=\"Please enter information from top to bottom for a smooth experience\" />\n        <BasicMsg msg=\"At the end, we'll produce the Lorenzi markdown for you\" />\n        <a\n          href={VIDEO_TUTORIAL}\n          rel=\"noopener noreferrer\"\n          title=\"Video Tutorial about how to use Crash Team Results website\"\n          target=\"_blank\"\n        >\n          Video Tutorial\n        </a>\n        {' - '}\n        <a href={guideFAQ} rel=\"noopener noreferrer\" title=\"Frequently Asked Questions\" target=\"_blank\">\n          FAQ\n        </a>\n        <h2>Players</h2>\n        <h3>Number of players</h3>\n        <BasicMsg msg=\"This includes CPUs if any\" />\n        {renderNumericStepperPlayers()}\n        <h3>Human Players</h3>\n        <BasicMsg msg=\"Type all human players present in the races\" />\n        <BasicMsg msg=\"You can leave some fields blank if there were CPUs\" />\n        <UsersInputs\n          isDisabledUI={disabledUI}\n          suggestions={suggestionPlayers}\n          players={players}\n          setPlayers={setPlayers}\n        />\n        {renderMainSection()}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}