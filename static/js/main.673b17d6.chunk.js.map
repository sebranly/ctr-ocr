{"version":3,"sources":["types.ts","constants/general.ts","constants/index.ts","utils/string.ts","utils/number.ts","utils/charList.ts","utils/userAgent.ts","utils/index.ts","utils/image.ts","utils/array.ts","utils/validation.ts","utils/date.ts","utils/lorenzi.ts","components/Footer.tsx","components/BasicMsg.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Category","Progress","Sign","AUTHOR_GITHUB","PROJECT_URL","GUIDE_FOLDER","URL_CPUS","EXAMPLE_IMAGES_FOLDER","EXAMPLE_IMAGES_FOLDER_FULL_EVENT","CHANGELOG_URL","MIME_JPEG","MIME_PNG","FFA_POINTS_SCHEME","WAR_POINTS_SCHEME","PLACEHOLDER_PLAYERS","cleanString","str","replaceAll","getClosestString","list","listSafe","filter","s","min","Infinity","name","forEach","distance","getEditDistance","str1","str2","newStr1","newStr2","length","i","distanceLine","j","push","substitutionCost","getSubstitutionCost","Math","character1","character2","char1","charAt","char2","charactersMatch","characters","includes","sortAlphanumeric","strA","strB","regexAlpha","regexNumeric","newA","replace","newB","aN","parseInt","bN","sortCaseInsensitive","a","b","lowerA","toLowerCase","lowerB","numberRange","max","numbers","applyRatio","ratio","nb","floor","getCharListDigits","join","isKeywordUA","userAgent","keyword","browser","formatCpuPlayers","cpuPlayers","sort","getPlayersPlaceholder","nbPlayers","isChrome","isChromeUA","isFirefox","isFirefoxUA","isMobile","type","device","isMobileUA","slice","getPlayers","players","split","getReferencePlayers","humanPlayers","includeCpuPlayers","humanPlayersSplit","cpuPlayersSplit","getPositionString","position","lastDigit","getParams","category","Position","Time","Username","charList","allLetters","player","uniq","getCharListFromUsernames","tessedit_char_whitelist","tessedit_pageseg_mode","getTeamNames","nbTeams","map","n","getMimeType","extension","getExtract","info","index","width","height","left","top","widthCrop","heightCrop","All","ratioHeight","extract","ratioTime","ratioEnd","ratioLeftOffsetName","ratioEndPosition","antiRatioTime","rectangle","topExt","heightExt","leftExtTime","widthExtTime","leftExtName","widthExtName","isTime","leftExt","widthExt","getFilenameWithoutExtension","filename","isEqual","a1","a2","every","v","createArraySameValue","value","Array","from","keys","_v","validatePoints","points","validation","correct","errMsg","sortedPoints","validateUsernames","usernames","some","formatDate","dateTimestamp","d","Date","month","getMonth","day","getDate","getFullYear","createLorenziTeams","races","playerTeams","teams","playersPoints","createLorenziPlayersPoints","teamPlayersLines","team","indexTeam","teamLine","teamIndex","getColorHexadecimalTeam","Object","pointsLine","line","createLorenziIntro","race","result","username","relevantResult","find","now","createLorenziFFA","playersLines","playerPoints","Footer","className","href","rel","title","target","BasicMsg","props","msg","App","renderBodyPointsScheme","slicedPointsScheme","absolutePointsScheme","_points","indexPoints","key","selectedSign","signPointsScheme","classesSelect","Positive","disabled","disabledUI","onChange","onChangeSignPointsScheme","renderOptionsSign","onChangeAbsolutePointsScheme","Negative","sign","label","renderBody","renderOption","option","indexOption","classesSelectPlayer","resultsOcr","resultOcr","indexPlayer","onChangeResultsPlayer","optionsResultsPlayerHuman","optionsResultsPlayerCpu","renderOptions","onChangeResultsPoints","pointsScheme","renderRace","labelRace","validationUsernames","r","validationPoints","croppedImages","classes","alt","src","renderCroppedImage","renderTable","renderLorenzi","indexRace","incorrectRaces","getIncorrectRaces","labelError","rowsLorenzi","lorenzi","match","options","message","text","onCopy","setCopiedLorenzi","copiedLorenzi","classPlatform","rows","renderPointsSchemeSection","renderTablePointsScheme","renderTeamSection","onChangeNbTeams","optionsNbTeams","renderTeamRepartition","onChangeTeam","e","currentTarget","newPlayerTeams","setPlayerTeams","renderPlayerTeamRepartition","colorPlayer","playerTeam","indexOf","getColorPlayer","playerClassnames","isChecked","id","checked","htmlFor","renderPlayerTeams","isFFA","classesValidation","validationTeams","isWarning","playersNames","renderCpuSection","cpuData","guideCpu","optionsCpuLanguages","textCheckbox","shouldIncludeCpuPlayers","nbPlayersTyped","onCpuCheckboxChange","onChangeCpuLanguage","cpuLanguage","placeholder","onMount","setOnMountOver","setDisabledUI","fetch","then","response","json","data","setCpuData","setCpuPlayers","doOCR","onMountOver","setOcrProgress","Started","setOcrProgressText","setResultsOcr","setIndexRace","setCroppedImages","setLorenzi","setStartOverConfirm","schedulerUsername","createScheduler","workerUsername","createWorker","addWorker","load","loadLanguage","initialize","usernameParams","setParameters","playerIndexes","promisesX","playerIndex","imgTransCopy","scheduler","dimensions","mimeType","extracted","crop","count","getBufferAsync","buffer","getColors","colors","rgb","shouldInvert","extractedFin","invert","bufferFin","addJob","resultsOcrTemp","croppedImagesTemp","imagesURLs","progressText","Jimp","read","imgJimpTemp","initialHeight","bitmap","imgJimp","resize","AUTO","imgTrans","rotate","h","w","getExtension","dimensionsCrop","clone","getBase64","err","imgTransGray","grayscale","promisesNames","Promise","all","results","resultsNames","dataResults","referencePlayers","csv","playerGuess","playerMatch","rawUsername","distanceUsername","Done","terminate","useWindowSize","React","NotStarted","ocrProgress","ocrProgressText","images","setImages","setImagesURLs","setNbPlayers","setCpuLanguage","setPlayers","setPointsScheme","setAbsolutePointsScheme","setSignPointsScheme","copiedPlayers","setCopiedPlayers","setIncludeCpuPlayers","setTeams","setNbTeams","startOverConfirm","newPointsScheme","absolutePoints","newImageUrls","imageA","imageB","nameA","nameB","newNameA","newNameB","sortImagesByFilename","image","URL","createObjectURL","newLorenzi","createLorenzi","onClickStartOver","_e","onClickStartOverConfirm","window","location","reload","onChangeIndexRace","delta","newIndex","onChangeImage","files","onChangeNbPlayers","newNbTeams","Number","teamNames","indexPointsScheme","newValue","copy","indexAbsolutePointsScheme","valueNumber","valueSafe","isNaN","abs","indexResultOcr","newVal","getOptionsTeams","classBgDisabled","missingTeamForPlayers","incorrectTeamForPlayers","seenTeams","validateTeams","validationPointsScheme","navigator","userAgentResult","UAParser","getResult","placeholderPlayers","issueOnTeams","issueOnPointsScheme","guideFAQ","document","body","scrollHeight","innerHeight","numberOfPieces","recycle","minimumValue","maximumValue","initialValue","onChangeNumericStepper","thumbColor","stepValue","size","inactiveTrackColor","activeTrackColor","activeButtonColor","inactiveIconColor","hoverIconColor","activeIconColor","disabledIconColor","thumbShadowAnimationOnTrackHoverEnabled","focusRingColor","renderNumericStepperPlayers","isFFASetup","isWarSetup","onClick","renderPointsSchemeMainSection","jpgImage","pngImage","guideImage","multiple","accept","renderImagesUpload","imageSrc","colorText","classesText","renderStart","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.673b17d6.chunk.js","sourcesContent":["export enum Category {\n  Position = 'position',\n  Time = 'time',\n  Username = 'username',\n  All = 'all'\n}\n\nexport enum Progress {\n  NotStarted = 'not_started',\n  Started = 'started',\n  Done = 'done'\n}\n\nexport type Validation = {\n  correct: boolean;\n  errMsg: string;\n  isWarning?: boolean;\n};\n\nexport type Coord = {\n  height: number;\n  left: number;\n  top: number;\n  width: number;\n};\n\nexport type Result = {\n  username: string;\n  position: number;\n  distanceUsername: number;\n  points: number;\n  rawUsername: string;\n};\n\nexport enum Sign {\n  Positive = '+',\n  Negative = '-'\n}\n","export const WEBSITE_LANGUAGE = 'en';\nexport const AUTHOR_NAME = 'sebranly';\nexport const AUTHOR_GITHUB = `https://${AUTHOR_NAME}.github.io`;\nexport const PROJECT_NAME = 'ctr-ocr';\nexport const JSON_FOLDER = 'ctr-ocr';\nexport const PROJECT_URL = `https://github.com/${AUTHOR_NAME}/${PROJECT_NAME}`;\nexport const CRASH_TEAM_RANKING_AUTHOR_URL = 'https://crashteamranking.com/members/siblingbling/tt/';\nexport const GUIDE_FOLDER = `${PROJECT_URL}/blob/main/doc/guide/${WEBSITE_LANGUAGE}/`;\nexport const DEBUG_MODE = false;\nexport const WEBSITE_TITLE = 'Crash Team Results';\nexport const WEBSITE_VERSION = '1.0.17';\nexport const WEBSITE_DEFAULT_LANGUAGE = 'en';\nexport const URL_CPUS = `${AUTHOR_GITHUB}/json/${JSON_FOLDER}/players.json`;\nexport const EXAMPLE_IMAGES_FOLDER = `https://raw.githubusercontent.com/${AUTHOR_NAME}/${PROJECT_NAME}/main/src/img/examples/`;\nexport const EXAMPLE_IMAGES_FOLDER_FULL_EVENT = `${PROJECT_URL}/tree/main/src/img/examples/full-event/`;\nexport const CHANGELOG_URL = `${PROJECT_URL}/releases`;\nexport const VIDEO_TUTORIAL = 'https://youtu.be/XjwoKGtEQag';\n","// In the game CTR:NF, once player 1 finishes, online players have 30 seconds to complete the race\n// The following is applicable to online races\nexport const CTR_MAX_TIME_DIFF_SEC = 30;\nexport const CTR_MAX_PLAYERS = 8;\nexport const MAX_HEIGHT_IMG = 1_000;\nexport const MIME_JPEG = 'image/jpeg';\nexport const MIME_PNG = 'image/png';\nexport const PSM_SINGLE_CHAR = '10';\nexport const PSM_SINGLE_LINE = '7';\nexport const SEPARATOR_PLAYERS = '\\n';\nexport const SEPARATOR_PLAYERS_LORENZI = '|';\nexport const TIME_DNF = '--:--:--';\nexport const PLACEHOLDER_CPUS = 'Loading CPUs...';\nexport const OCR_LANGUAGE = 'eng';\n// There will always be a possibility for 2 teams\nexport const INITIAL_TEAMS_NB = 2;\n// Note: if any of those two contain at least one negative value then\n// the code will have to be tweaked for absolutePointsScheme\nexport const FFA_POINTS_SCHEME = [10, 8, 7, 5, 4, 3, 2, 1];\nexport const WAR_POINTS_SCHEME = [10, 8, 6, 5, 4, 3, 2, 1];\nexport const LORENZI_TABLE_URL = 'https://gb.hlorenzi.com/table';\nexport const PLACEHOLDER_PLAYERS = [\n  'ZouGui28',\n  'Nefarious_CTR',\n  'Kyo-Bomba',\n  'WadaDim-PatroL',\n  'Hyène_JurassX',\n  'Alexiz',\n  'Colonel_Hay',\n  'TATANE'\n];\n","const cleanString = (str: string) => str.replaceAll('\\n', '').replaceAll(' ', '');\n\nconst getClosestString = (str: string, list: string[]) => {\n  const listSafe = list.filter((s: string) => !!s);\n  let min = Infinity;\n  let name = str;\n\n  listSafe.forEach((s: string) => {\n    const distance = getEditDistance(str, s);\n\n    if (distance < min) {\n      min = distance;\n      name = s;\n    }\n  });\n\n  return name;\n};\n\n/**\n * Simply called edit distance as it's a custom version of Levenshtein distance\n * We keep the score of 1 for addition and deletion\n * But we attribute a score between 0 and 1 (e.g. 0.5) for substitution,\n * based on the similarity of pattern of the two characters\n */\nconst getEditDistance = (str1: string, str2: string) => {\n  const newStr1 = str1 || '';\n  const newStr2 = str2 || '';\n\n  if (newStr1 === '') return newStr2.length;\n  if (newStr2 === '') return newStr1.length;\n\n  const distance: number[][] = [];\n\n  for (let i = 0; i <= newStr1.length; i++) {\n    const distanceLine: number[] = [];\n\n    for (let j = 0; j <= newStr2.length; j++) {\n      distanceLine.push(0);\n    }\n\n    distance.push(distanceLine);\n  }\n\n  for (let i = 1; i <= newStr1.length; i++) {\n    distance[i][0] = i;\n  }\n\n  for (let j = 1; j <= newStr2.length; j++) {\n    distance[0][j] = j;\n  }\n\n  for (let j = 1; j <= newStr2.length; j++) {\n    for (let i = 1; i <= newStr1.length; i++) {\n      const substitutionCost = getSubstitutionCost(newStr1[i - 1], newStr2[j - 1]);\n\n      distance[i][j] = Math.min(\n        distance[i - 1][j] + 1,\n        distance[i][j - 1] + 1,\n        distance[i - 1][j - 1] + substitutionCost\n      );\n    }\n  }\n\n  return distance[newStr1.length][newStr2.length];\n};\n\nconst getSubstitutionCost = (character1: string, character2: string) => {\n  if (character1.length !== 1 || character2.length !== 1) return 1;\n\n  const char1 = character1.charAt(0);\n  const char2 = character2.charAt(0);\n\n  if (char1 === char2) return 0;\n\n  // This is based on a manual feeling on the font from CTR:NF screenshots\n  if (charactersMatch(char1, char2, ['B', '8'])) return 0.5;\n  if (charactersMatch(char1, char2, ['-', '_'])) return 0.5;\n  if (charactersMatch(char1, char2, ['Z', '2'])) return 0.5;\n  if (charactersMatch(char1, char2, ['O', '0'])) return 0.5;\n  if (charactersMatch(char1, char2, ['l', '1'])) return 0.5;\n  if (charactersMatch(char1, char2, ['S', '5'])) return 0.5;\n\n  if (charactersMatch(char1, char2, ['Z', '7'])) return 0.75;\n  if (charactersMatch(char1, char2, ['o', '0'])) return 0.75;\n  if (charactersMatch(char1, char2, ['o', 'O'])) return 0.75;\n  if (charactersMatch(char1, char2, ['D', 'P'])) return 0.75;\n  if (charactersMatch(char1, char2, ['B', 'R'])) return 0.75;\n  if (charactersMatch(char1, char2, ['e', 'c'])) return 0.75;\n  if (charactersMatch(char1, char2, ['c', 'o'])) return 0.75;\n\n  return 1;\n};\n\nconst charactersMatch = (character1: string, character2: string, characters: [string, string]) => {\n  return characters.includes(character1) && characters.includes(character2);\n};\n\nconst charRange = (startChar: string, stopChar: string) => {\n  const startInt = startChar.charCodeAt(0);\n  const stopInt = stopChar.charCodeAt(0);\n  const result = [];\n\n  for (let i = startInt; i <= stopInt; i += 1) {\n    result.push(String.fromCharCode(i));\n  }\n\n  return result;\n};\n\nconst sortAlphanumeric = (strA: string, strB: string) => {\n  const regexAlpha = /[^a-zA-Z]/g;\n  const regexNumeric = /[^0-9]/g;\n\n  var newA = strA.replace(regexAlpha, '');\n  var newB = strB.replace(regexAlpha, '');\n\n  if (newA === newB) {\n    var aN = parseInt(strA.replace(regexNumeric, ''), 10);\n    var bN = parseInt(strB.replace(regexNumeric, ''), 10);\n    return aN === bN ? 0 : aN > bN ? 1 : -1;\n  }\n\n  return newA > newB ? 1 : -1;\n};\n\nconst sortCaseInsensitive = (a: string, b: string) => {\n  if (!a || !b) return 1;\n  const lowerA = a.toLowerCase();\n  const lowerB = b.toLowerCase();\n\n  if (lowerA === lowerB) return 0;\n\n  return lowerA > lowerB ? 1 : -1;\n};\n\nexport {\n  charRange,\n  charactersMatch,\n  cleanString,\n  getClosestString,\n  getEditDistance,\n  getSubstitutionCost,\n  sortAlphanumeric,\n  sortCaseInsensitive\n};\n","const numberRange = (min: number, max: number) => {\n  const numbers = [];\n  for (let i = min; i <= max; i += 1) numbers.push(i);\n  return numbers;\n};\n\nconst applyRatio = (ratio: number, nb: number) => Math.floor(ratio * nb);\n\nexport { applyRatio, numberRange };\n","import { uniq } from 'lodash';\nimport { CTR_MAX_PLAYERS } from '../constants';\nimport { numberRange } from './number';\nimport { charRange, sortAlphanumeric } from './string';\n\nconst getCharListPosition = () => numberRange(1, CTR_MAX_PLAYERS).join('');\nconst getCharListDigits = () => numberRange(0, 9).join('');\nconst getCharListTime = () => `${getCharListDigits()}:-`;\n\n/**\n * @deprecated Use getCharListFromUsernames instead\n */\nconst getCharListUsername = () => {\n  const charListUppercaseLetters = charRange('A', 'Z').join('');\n  const charListLowercaseLetters = charRange('a', 'z').join('');\n  const charListLetters = `${charListLowercaseLetters}${charListUppercaseLetters}`;\n\n  return `${charListLetters}${getCharListDigits()}:-_. `;\n};\n\nconst getCharListFromUsernames = (players: string[], cpuPlayers: string[], includeCpuPlayers: boolean) => {\n  const allLetters: string[] = [];\n  players.forEach((player: string) => {\n    allLetters.push(...player.split(''));\n  });\n\n  if (includeCpuPlayers) {\n    cpuPlayers.forEach((player: string) => {\n      allLetters.push(...player.split(''));\n    });\n  }\n\n  const newAllLetters = uniq(allLetters).sort(sortAlphanumeric);\n\n  return newAllLetters.join('');\n};\n\nexport { getCharListPosition, getCharListDigits, getCharListTime, getCharListUsername, getCharListFromUsernames };\n","import UAParser from 'ua-parser-js';\n\nconst isMobileUA = (userAgent: UAParser.IResult) => {\n  const type = userAgent.device?.type ?? '';\n\n  return ['mobile', 'tablet'].includes(type);\n};\n\nconst isKeywordUA = (userAgent: UAParser.IResult, keyword: string) => {\n  const name = userAgent.browser?.name ?? '';\n\n  return name.includes(keyword);\n};\n\nconst isChromeUA = (userAgent: UAParser.IResult) => isKeywordUA(userAgent, 'Chrome');\nconst isFirefoxUA = (userAgent: UAParser.IResult) => isKeywordUA(userAgent, 'Firefox');\n\nexport { isMobileUA, isChromeUA, isFirefoxUA };\n","import { PLACEHOLDER_PLAYERS, PSM_SINGLE_CHAR, PSM_SINGLE_LINE, SEPARATOR_PLAYERS } from '../constants';\nimport { Category } from '../types';\nimport { REGEX_TIME } from './regEx';\nimport { uniq } from 'lodash';\nimport { getCharListFromUsernames, getCharListPosition, getCharListTime } from './charList';\nimport { numberRange } from './number';\nimport { isChromeUA, isFirefoxUA, isMobileUA } from './userAgent';\n\nconst formatCpuPlayers = (cpuPlayers: string[]) => {\n  if (!cpuPlayers || cpuPlayers.length === 0) return '';\n\n  return cpuPlayers\n    .filter((s: string) => !!s)\n    .sort()\n    .join(SEPARATOR_PLAYERS);\n};\n\nconst getPlayersPlaceholder = (nbPlayers: number, userAgent: UAParser.IResult) => {\n  if (nbPlayers < 1) return '';\n\n  const isChrome = isChromeUA(userAgent);\n  const isFirefox = isFirefoxUA(userAgent);\n  const isMobile = isMobileUA(userAgent);\n\n  const canBeMultiLine = nbPlayers > 1 && (isChrome || isFirefox) && !isMobile;\n\n  if (!canBeMultiLine) return PLACEHOLDER_PLAYERS[0];\n\n  return PLACEHOLDER_PLAYERS.slice(0, nbPlayers).join('\\n');\n};\n\nconst getPlayers = (players: string) => {\n  if (!players) return [];\n\n  return players.split(SEPARATOR_PLAYERS).filter((s: string) => !!s);\n};\n\nconst isHumanPlayer = (player: string, humanPlayers: string) => {\n  if (!humanPlayers) return false;\n\n  const humanPlayersSplit = getPlayers(humanPlayers);\n\n  return humanPlayersSplit.includes(player);\n};\n\nconst getReferencePlayers = (humanPlayers: string, cpuPlayers: string, includeCpuPlayers: boolean) => {\n  if (!humanPlayers) return [];\n\n  const humanPlayersSplit = getPlayers(humanPlayers);\n\n  if (!includeCpuPlayers || !cpuPlayers) return humanPlayersSplit;\n\n  const cpuPlayersSplit = getPlayers(cpuPlayers);\n\n  return [...humanPlayersSplit, ...cpuPlayersSplit];\n};\n\nconst positionIsValid = (position: string, max: number) => {\n  if (!position) return false;\n  const pos = Number(position);\n  const isValid = position.length === 1 && pos >= 1 && pos <= max;\n\n  return isValid;\n};\n\nconst convertToMs = (time: string) => {\n  const timeIsValid = REGEX_TIME.test(time);\n  if (!timeIsValid) return 0;\n\n  const splits = time.split(':');\n  if (splits.length < 3) return 0;\n  const [minutesStr, secondsStr, centisecondsStr] = splits;\n\n  const minutes = Number(minutesStr);\n  const seconds = Number(secondsStr);\n  const centiseconds = Number(centisecondsStr);\n\n  const milliseconds = centiseconds * 10 + seconds * 1_000 + minutes * 60 * 1_000;\n\n  return milliseconds;\n};\n\nconst getOptionsTeams = (nbPlayers: number) => {\n  if ([0, 1, 2].includes(nbPlayers)) return [nbPlayers];\n\n  const teams = uniq([nbPlayers, ...numberRange(2, nbPlayers - 1).sort((a, b) => a - b)]);\n\n  return teams;\n};\n\nconst getPositionString = (position: number) => {\n  if (position < 1) return `${position}`;\n\n  if ([11, 12, 13].includes(position)) return `${position}th`;\n\n  const lastDigit = position % 10;\n\n  if (lastDigit === 1) return `${position}st`;\n  if (lastDigit === 2) return `${position}nd`;\n  if (lastDigit === 3) return `${position}rd`;\n\n  return `${position}th`;\n};\n\nconst getParams = (category: Category, players: string[], cpuPlayers: string[], includeCpuPlayers: boolean) => {\n  const { Position, Time, Username } = Category;\n  const charList = getCharListFromUsernames(players, cpuPlayers, includeCpuPlayers);\n\n  switch (category) {\n    case Position:\n      return {\n        tessedit_char_whitelist: getCharListPosition(),\n        tessedit_pageseg_mode: PSM_SINGLE_CHAR as any\n      };\n\n    case Username:\n      return {\n        tessedit_char_whitelist: charList,\n        tessedit_pageseg_mode: PSM_SINGLE_LINE as any\n      };\n\n    case Time:\n    default:\n      return {\n        tessedit_char_whitelist: getCharListTime(),\n        tessedit_pageseg_mode: PSM_SINGLE_LINE as any\n      };\n  }\n};\n\nconst getTeamNames = (nbTeams: number) => {\n  if (nbTeams === 0) return [];\n\n  return numberRange(1, nbTeams).map((n: number) => `Team ${n}`);\n};\n\nconst getColorPlayer = (player: string, teams: string[], playerTeams: Record<string, string>) => {\n  const playerTeam = playerTeams[player];\n\n  if (!playerTeam) return 'black';\n\n  const index = teams.indexOf(playerTeam);\n\n  switch (index) {\n    case 0:\n      return 'blue';\n    case 1:\n      return 'red';\n    case 2:\n      return 'green';\n    case 3:\n      return 'orange';\n    case 4:\n      return 'purple';\n    case 5:\n      return 'brown';\n    case 6:\n      return 'grey';\n    default:\n      return 'black';\n  }\n};\n\nconst getColorHexadecimalTeam = (teamIndex: number) => {\n  switch (teamIndex) {\n    case 0:\n      return '#33CCFF';\n    case 1:\n      return '#FF4040';\n    case 2:\n      return '#008000';\n    case 3:\n      return '#FFA500';\n    case 4:\n      return '#6A0DAD';\n    case 5:\n      return '#964B00';\n    case 6:\n      return '#808080';\n    default:\n      // As it's used as a background, we use opposite of black here\n      return '#FFFFFF';\n  }\n};\n\nexport {\n  convertToMs,\n  formatCpuPlayers,\n  getOptionsTeams,\n  getPlayers,\n  getPlayersPlaceholder,\n  getReferencePlayers,\n  getTeamNames,\n  getColorHexadecimalTeam,\n  getColorPlayer,\n  getPositionString,\n  getParams,\n  isHumanPlayer,\n  positionIsValid\n};\n","import { applyRatio } from './number';\nimport { CTR_MAX_PLAYERS, MIME_JPEG, MIME_PNG } from '../constants';\nimport { Category, Coord } from '../types';\nimport { sortAlphanumeric } from './string';\n\nconst getMimeType = (extension: string) => {\n  if (!extension) return MIME_JPEG;\n\n  const isPng = extension.toLowerCase() === 'png';\n\n  return isPng ? MIME_PNG : MIME_JPEG;\n};\n\n// TODO: for All, index is actually the number of players\nconst getExtract = (info: any, index = 0, category: Category) => {\n  const { width, height } = info;\n  const left = applyRatio(0.64, width);\n  const top = applyRatio(0.265, height);\n  const widthCrop = applyRatio(0.27, width);\n  const heightCrop = applyRatio(0.425, height);\n\n  if (category === Category.All) {\n    const ratioHeight = index / CTR_MAX_PLAYERS;\n    const extract: Coord = {\n      height: applyRatio(ratioHeight, heightCrop),\n      left,\n      top,\n      width: widthCrop\n    };\n\n    return extract;\n  }\n\n  const ratioTime = 0.73;\n  const ratioEnd = 0.03;\n  const ratioLeftOffsetName = 0.27;\n  const ratioEndPosition = 0.1;\n  const antiRatioTime = 1 - ratioTime - ratioEnd;\n\n  const rectangle = {\n    top: applyRatio(index / 8, heightCrop),\n    height: applyRatio(1 / 8, heightCrop)\n  };\n\n  const topExt = top + rectangle.top;\n  const heightExt = rectangle.height;\n\n  if (category === Category.Position) {\n    const extract: Coord = {\n      height: heightExt,\n      left: left,\n      top: topExt,\n      width: applyRatio(ratioEndPosition, widthCrop)\n    };\n\n    return extract;\n  }\n\n  const leftExtTime = left + applyRatio(ratioTime, widthCrop);\n  const widthExtTime = applyRatio(antiRatioTime, widthCrop);\n\n  const leftExtName = left + applyRatio(ratioLeftOffsetName, widthCrop);\n  const widthExtName = applyRatio(1 - antiRatioTime - ratioLeftOffsetName - ratioEnd, widthCrop);\n\n  const isTime = category === Category.Time;\n  const leftExt = isTime ? leftExtTime : leftExtName;\n  const widthExt = isTime ? widthExtTime : widthExtName;\n\n  const extract: Coord = {\n    height: heightExt,\n    left: leftExt,\n    top: topExt,\n    width: widthExt\n  };\n\n  return extract;\n};\n\nconst getFilenameWithoutExtension = (filename: string) => {\n  if (!filename) return '';\n\n  const splits = filename.split('.');\n\n  return splits[0];\n};\n\nconst sortImagesByFilename = (images: any[]) => {\n  if (images.length === 0) return [];\n  if (images.length === 1) return images;\n\n  const sortedImages = images.sort((imageA: any, imageB: any) => {\n    const { name: nameA } = imageA;\n    const { name: nameB } = imageB;\n\n    const newNameA = getFilenameWithoutExtension(nameA);\n    const newNameB = getFilenameWithoutExtension(nameB);\n\n    return sortAlphanumeric(newNameA, newNameB);\n  });\n\n  return sortedImages;\n};\n\nexport { getFilenameWithoutExtension, getMimeType, getExtract, sortImagesByFilename };\n","const isEqual = (a1: (number | string)[], a2: (number | string)[]) => {\n  if (a1.length !== a2.length) return false;\n  return a1.every((v, i) => v === a2[i]);\n};\n\nconst createArraySameValue = (length: number, value: any) => {\n  if (length === 0) return [];\n  if (length === 1) return [value];\n\n  return Array.from(Array(length).keys()).map((_v: number) => value);\n};\n\nexport { createArraySameValue, isEqual };\n","import { uniq } from 'lodash';\nimport { convertToMs } from './index';\nimport { CTR_MAX_TIME_DIFF_SEC, TIME_DNF } from '../constants';\nimport { Result, Validation } from '../types';\nimport { REGEX_TIME } from './regEx';\nimport { isEqual } from './array';\n\nconst getIncorrectRaces = (resultsOcr: Result[][]) => {\n  const validationPoints = resultsOcr.map((race: Result[]) => validatePoints(race.map((race) => race.points)));\n  const validationUsernames = resultsOcr.map((race: Result[]) => validateUsernames(race.map((race) => race.username)));\n\n  const incorrectRaces: number[] = [];\n\n  validationPoints.forEach((validation: Validation, index: number) => {\n    if (!validation.correct) incorrectRaces.push(index + 1);\n  });\n\n  validationUsernames.forEach((validation: Validation, index: number) => {\n    if (!validation.correct && !incorrectRaces.includes(index + 1)) incorrectRaces.push(index + 1);\n  });\n\n  return incorrectRaces.sort((a, b) => a - b);\n};\n\nconst validatePoints = (points: number[]) => {\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  const copyPoints = [...points];\n\n  const sortedPoints = copyPoints.sort((a: number, b: number) => {\n    return b - a;\n  });\n\n  if (isEqual(sortedPoints, points)) {\n    validation.correct = true;\n\n    return validation;\n  }\n\n  validation.errMsg = 'Points should decrease from first to last place (ties are possible)';\n\n  return validation;\n};\n\nconst validateTeams = (players: string[], teams: string[], playerTeams: Record<string, string>) => {\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  const missingTeamForPlayers: string[] = [];\n  const incorrectTeamForPlayers: string[] = [];\n  const seenTeams: string[] = [];\n\n  players.forEach((player: string) => {\n    const team = playerTeams[player];\n    if (!team) {\n      missingTeamForPlayers.push(player);\n    }\n\n    if (!teams.includes(team)) {\n      incorrectTeamForPlayers.push(player);\n    }\n\n    if (teams.includes(team)) {\n      seenTeams.push(team);\n    }\n  });\n\n  if (missingTeamForPlayers.length > 0) {\n    validation.errMsg = `The following players have no assigned team: ${missingTeamForPlayers.join(', ')}`;\n    validation.isWarning = true;\n\n    return validation;\n  }\n\n  if (incorrectTeamForPlayers.length > 0) {\n    validation.errMsg = `The following players have an invalid team: ${incorrectTeamForPlayers.join(', ')}`;\n\n    return validation;\n  }\n\n  if (uniq(seenTeams).length === 1) {\n    validation.errMsg = 'You cannot have all players under the same team';\n\n    return validation;\n  }\n\n  validation.correct = true;\n  return validation;\n};\n\nconst validateUsernames = (usernames: string[]) => {\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  const empty = usernames.some((str: string) => !str);\n  if (empty) {\n    validation.errMsg = 'At least one username is missing';\n\n    return validation;\n  }\n\n  const uniqueUsernames = uniq(usernames);\n  if (uniqueUsernames.length !== usernames.length) {\n    validation.errMsg = 'At least one username is duplicated';\n\n    return validation;\n  }\n\n  validation.correct = true;\n  return validation;\n};\n\nconst validateTimes = (times: string[]) => {\n  const positionNotTime: number[] = [];\n  const validation: Validation = {\n    correct: false,\n    errMsg: ''\n  };\n\n  times.forEach((time: string, index: number) => {\n    const timeIsValid = REGEX_TIME.test(time) || time === TIME_DNF;\n\n    if (!timeIsValid) {\n      positionNotTime.push(index + 1);\n    }\n  });\n\n  if (positionNotTime.length > 0) {\n    validation.errMsg = `The following positions have incorrect formatted times: ${positionNotTime.join(', ')}`;\n    return validation;\n  }\n\n  const minIndexTimeDnf = times.indexOf(TIME_DNF);\n  if (minIndexTimeDnf !== -1) {\n    const positionAfterDnf = [];\n\n    for (let i = minIndexTimeDnf + 1; i < times.length; i++) {\n      if (times[i] !== TIME_DNF) {\n        positionAfterDnf.push(i + 1);\n      }\n    }\n\n    if (positionAfterDnf.length > 0) {\n      validation.errMsg = `The following positions finished after somebody that did not finish: ${positionAfterDnf.join(\n        ', '\n      )}`;\n\n      return validation;\n    }\n  }\n\n  const finishedTimesLength = minIndexTimeDnf !== -1 ? minIndexTimeDnf : times.length;\n  const finishedTimes = times.slice(0, finishedTimesLength);\n  const finishedTimesMs = finishedTimes.map(convertToMs);\n  const copyMs = [...finishedTimesMs];\n  const sortedTimesMs = copyMs.sort((a: number, b: number) => {\n    return a - b;\n  });\n\n  if (!isEqual(finishedTimesMs, sortedTimesMs)) {\n    validation.errMsg = `From position 1 to position ${finishedTimesLength}, times are not in chronological order`;\n\n    return validation;\n  }\n\n  if (sortedTimesMs.length > 1) {\n    const maxTime = sortedTimesMs[sortedTimesMs.length - 1];\n    const minTime = sortedTimesMs[0];\n\n    const diffTime = maxTime - minTime;\n    if (diffTime > CTR_MAX_TIME_DIFF_SEC * 1_000) {\n      validation.errMsg = `There are more than ${CTR_MAX_TIME_DIFF_SEC} seconds separating players`;\n\n      return validation;\n    }\n  }\n\n  validation.correct = true;\n  return validation;\n};\n\nexport { getIncorrectRaces, validatePoints, validateTeams, validateTimes, validateUsernames };\n","const formatDate = (dateTimestamp: number) => {\n  const d = new Date(dateTimestamp);\n  const month = `${d.getMonth() + 1}`;\n  const day = `${d.getDate()}`;\n  const year = `${d.getFullYear()}`;\n\n  const newMonth = month.length < 2 ? `0${month}` : month;\n  const newDay = day.length < 2 ? `0${day}` : day;\n\n  return [year, newMonth, newDay].join('-');\n};\n\nexport { formatDate };\n","import { getColorHexadecimalTeam } from '.';\nimport { SEPARATOR_PLAYERS_LORENZI } from '../constants';\nimport { Result } from '../types';\nimport { formatDate } from './date';\nimport { cleanString } from './string';\n\nconst createLorenzi = (\n  races: Result[][],\n  playerTeams: Record<string, string>,\n  nbTeams: number,\n  nbPlayers: number,\n  teams: string[],\n  includeCpuPlayers: boolean\n) => {\n  // Presence of CPUs currently means there is no team\n  const isFFA = includeCpuPlayers || nbTeams === nbPlayers;\n\n  if (isFFA) return createLorenziFFA(races);\n\n  return createLorenziTeams(races, playerTeams, teams);\n};\n\nconst createLorenziTeams = (races: Result[][], playerTeams: Record<string, string>, teams: string[]) => {\n  const playersPoints = createLorenziPlayersPoints(races);\n\n  const teamPlayersLines: string[] = [];\n\n  teams.forEach((team: string, indexTeam: number) => {\n    const teamLine = `${cleanString(team)} ${getColorHexadecimalTeam(indexTeam)}`;\n    teamPlayersLines.push(teamLine);\n\n    Object.keys(playerTeams).forEach((player: string) => {\n      if (playerTeams[player] === team) {\n        const pointsLine = playersPoints[player];\n\n        const line = `${player} ${pointsLine.join(SEPARATOR_PLAYERS_LORENZI)}`;\n\n        teamPlayersLines.push(line);\n      }\n    });\n\n    teamPlayersLines.push('');\n  });\n\n  return [...createLorenziIntro(), '', ...teamPlayersLines];\n};\n\nconst createLorenziPlayersPoints = (races: Result[][]) => {\n  const playersPoints: Record<string, number[]> = {};\n\n  races.forEach((race: Result[]) => {\n    race.forEach((result: Result) => {\n      const { username } = result;\n\n      if (!Object.keys(playersPoints).includes(username)) {\n        playersPoints[username] = [];\n      }\n    });\n  });\n\n  races.forEach((race: Result[]) => {\n    Object.keys(playersPoints).forEach((username: string) => {\n      const relevantResult = race.find((result: Result) => result.username === username);\n\n      const points = relevantResult?.points ?? 0;\n\n      playersPoints[username].push(points);\n    });\n  });\n\n  return playersPoints;\n};\n\nconst createLorenziIntro = () => {\n  return ['#title Title', `#date ${formatDate(Date.now())}`];\n};\n\nconst createLorenziFFA = (races: Result[][]) => {\n  const playersPoints = createLorenziPlayersPoints(races);\n\n  const playersLines: string[] = [];\n\n  Object.keys(playersPoints).forEach((username: string) => {\n    const playerPoints = playersPoints[username];\n\n    const line = `${username} ${playerPoints.join(SEPARATOR_PLAYERS_LORENZI)}`;\n\n    playersLines.push(line);\n  });\n\n  return [...createLorenziIntro(), '', ...playersLines];\n};\n\nexport { createLorenzi, createLorenziFFA, createLorenziTeams, createLorenziIntro, createLorenziPlayersPoints };\n","import * as React from 'react';\nimport { CRASH_TEAM_RANKING_AUTHOR_URL, CHANGELOG_URL, PROJECT_URL, WEBSITE_VERSION } from '../constants/general';\n\nconst Footer = () => (\n  <>\n    <div className=\"mt2 text-center\">\n      Developed by{' '}\n      <a href={PROJECT_URL} rel=\"noopener noreferrer\" title=\"GitHub page for repository\" target=\"_blank\">\n        sebranly\n      </a>{' '}\n      (PSN:{' '}\n      <a\n        href={CRASH_TEAM_RANKING_AUTHOR_URL}\n        rel=\"noopener noreferrer\"\n        title=\"Crash Team Ranking for ZouGui28\"\n        target=\"_blank\"\n      >\n        ZouGui28\n      </a>\n      ) with ❤️\n    </div>\n    <div className=\"mt2 text-center\">\n      Website version{' '}\n      <a href={CHANGELOG_URL} rel=\"noopener noreferrer\" title=\"Website changelog\" target=\"_blank\">\n        {WEBSITE_VERSION}\n      </a>\n    </div>\n  </>\n);\n\nexport { Footer };\n","import * as React from 'react';\n\nexport interface BasicMsgProps {\n  msg: string;\n}\n\nconst BasicMsg: React.FC<BasicMsgProps> = (props) => {\n  const { msg } = props;\n\n  return <div className=\"text-center mb\">{msg}</div>;\n};\n\nexport { BasicMsg };\n","import * as React from 'react';\nimport './App.css';\nimport { createWorker, createScheduler } from 'tesseract.js';\nimport { Category, Progress, Result, Sign } from './types';\nimport getColors from 'get-image-colors';\nimport Jimp from 'jimp';\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport Confetti from 'react-confetti';\nimport { isMobile } from 'react-device-detect';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { NumericStepper } from '@anatoliygatt/numeric-stepper';\n\nimport {\n  EXAMPLE_IMAGES_FOLDER,\n  EXAMPLE_IMAGES_FOLDER_FULL_EVENT,\n  GUIDE_FOLDER,\n  URL_CPUS,\n  VIDEO_TUTORIAL,\n  WEBSITE_DEFAULT_LANGUAGE,\n  WEBSITE_TITLE\n} from './constants/general';\nimport {\n  CTR_MAX_PLAYERS,\n  FFA_POINTS_SCHEME,\n  INITIAL_TEAMS_NB,\n  LORENZI_TABLE_URL,\n  MAX_HEIGHT_IMG,\n  MIME_JPEG,\n  MIME_PNG,\n  OCR_LANGUAGE,\n  PLACEHOLDER_CPUS,\n  WAR_POINTS_SCHEME\n} from './constants';\nimport { cleanString, getClosestString, getEditDistance, sortCaseInsensitive } from './utils/string';\nimport {\n  formatCpuPlayers,\n  getColorPlayer,\n  getOptionsTeams,\n  getParams,\n  getPlayers,\n  getPlayersPlaceholder,\n  getPositionString,\n  getReferencePlayers,\n  getTeamNames,\n  isHumanPlayer\n} from './utils';\nimport { numberRange } from './utils/number';\nimport { getExtract, getMimeType, sortImagesByFilename } from './utils/image';\nimport { logMsg, logTable, logTime } from './utils/log';\nimport { getIncorrectRaces, validatePoints, validateTeams, validateUsernames } from './utils/validation';\nimport { uniq } from 'lodash';\nimport UAParser from 'ua-parser-js';\nimport { createArraySameValue, isEqual } from './utils/array';\nimport { createLorenzi } from './utils/lorenzi';\nimport { Footer } from './components/Footer';\nimport { BasicMsg } from './components/BasicMsg';\n\nconst App = () => {\n  const renderProgressBar = () => {\n    if (ocrProgress !== Progress.Started) return null;\n\n    return (\n      <div className=\"progress-bar\">\n        <div className=\"progress-bar-value\"></div>\n        <div className=\"progress-bar-text\">{ocrProgressText}</div>\n      </div>\n    );\n  };\n\n  const renderTablePointsScheme = () => {\n    const classes = isMobile ? 'flex-1' : 'flex-1 max-width-50 center';\n    return (\n      <table className={classes}>\n        <thead>\n          <tr>\n            <th className=\"text-center\">Position</th>\n            <th className=\"text-center\">Points</th>\n          </tr>\n        </thead>\n        {renderBodyPointsScheme()}\n      </table>\n    );\n  };\n\n  const renderTable = (index: number) => {\n    const classes = isMobile ? 'flex-1 limited-table' : 'flex-1';\n\n    return (\n      <table className={classes}>\n        <thead>\n          <tr>\n            <th>Position</th>\n            {includeCpuPlayers && <th>Type</th>}\n            <th>Name</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        {renderBody(index)}\n      </table>\n    );\n  };\n\n  const renderCroppedImage = (index: number) => {\n    if (!croppedImages || croppedImages.length <= index) return null;\n\n    const classes = isMobile ? 'img-show max-width-100' : 'img-show max-width-45';\n\n    return <img alt=\"Cropped Results\" className={classes} src={croppedImages[index]} />;\n  };\n\n  const renderImages = () => {\n    if (issueOnPointsScheme || issueOnTeams) return null;\n\n    if (isMobile) {\n      return imagesURLs.map((imageSrc: string, index: number) => (\n        <img alt=\"TODO:\" className=\"img-full max-width-100 block\" key={`${imageSrc}-${index}`} src={imageSrc} />\n      ));\n    }\n\n    return (\n      <div className=\"flex-container center\">\n        {imagesURLs.map((imageSrc: string, index: number) => (\n          <img alt=\"TODO:\" className=\"img-full max-width-45 flex-1\" key={`${imageSrc}-${index}`} src={imageSrc} />\n        ))}\n      </div>\n    );\n  };\n\n  const renderBodyPointsScheme = () => {\n    const slicedPointsScheme = absolutePointsScheme.slice(0, nbPlayers);\n\n    return (\n      <tbody>\n        {slicedPointsScheme.map((_points: number, indexPoints: number) => {\n          const key = indexPoints;\n          const selectedSign = signPointsScheme[indexPoints];\n          const classesSelect = selectedSign === Sign.Positive ? 'green' : 'red';\n\n          return (\n            <tr key={key}>\n              <td className=\"text-center\">{getPositionString(indexPoints + 1)}</td>\n              <td className=\"text-center\">\n                <select\n                  disabled={disabledUI}\n                  onChange={onChangeSignPointsScheme(indexPoints)}\n                  className={classesSelect}\n                  value={selectedSign}\n                >\n                  {renderOptionsSign()}\n                </select>\n                <input\n                  className=\"ml text-center\"\n                  type=\"number\"\n                  min={0}\n                  value={absolutePointsScheme[indexPoints]}\n                  disabled={disabledUI}\n                  onChange={onChangeAbsolutePointsScheme(indexPoints)}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    );\n  };\n\n  const renderOptionsSign = () => {\n    const signs = [Sign.Positive, Sign.Negative];\n\n    return signs.map((sign: string) => {\n      return (\n        <option key={sign} label={sign} value={sign}>\n          {sign}\n        </option>\n      );\n    });\n  };\n\n  const renderBody = (index: number) => {\n    const renderOption = (option: string | number, indexOption: number) => {\n      const key = `${option}-${indexOption}`;\n      const label = `${option}`;\n      return (\n        <option key={key} label={label} value={option}>\n          {label}\n        </option>\n      );\n    };\n\n    const renderOptions = () => {\n      const optionsResultsPlayerHuman = getPlayers(players).sort(sortCaseInsensitive);\n      if (!includeCpuPlayers) {\n        return optionsResultsPlayerHuman.map(renderOption);\n      }\n\n      const optionsResultsPlayerCpu = getPlayers(cpuPlayers).sort(sortCaseInsensitive);\n\n      return (\n        <>\n          <optgroup key=\"human\" label=\"Human\">\n            {optionsResultsPlayerHuman.map(renderOption)}\n          </optgroup>\n          <optgroup key=\"cpus\" label=\"CPUs\">\n            {optionsResultsPlayerCpu.map(renderOption)}\n          </optgroup>\n        </>\n      );\n    };\n\n    const renderOptionsPoints = () => {\n      const optionsResultsPoints = uniq([...pointsScheme.slice(0, nbPlayers), 0]).sort((a, b) => b - a);\n\n      return optionsResultsPoints.map(renderOption);\n    };\n\n    const classesSelectPlayer = isMobile ? 'max-width-100' : '';\n\n    return (\n      <tbody>\n        {resultsOcr[index].map((resultOcr: Result, indexPlayer: number) => {\n          const { position, username, points } = resultOcr;\n          const key = `${position}-${username}`;\n\n          return (\n            <tr key={key}>\n              <td>{getPositionString(position)}</td>\n              {includeCpuPlayers && <td>{isHumanPlayer(username, players) ? '👤' : '🤖'}</td>}\n              <td>\n                <select\n                  className={classesSelectPlayer}\n                  onChange={onChangeResultsPlayer(index, indexPlayer)}\n                  value={username}\n                >\n                  {renderOptions()}\n                </select>\n              </td>\n              <td>\n                <select onChange={onChangeResultsPoints(index, indexPlayer)} value={points}>\n                  {renderOptionsPoints()}\n                </select>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    );\n  };\n\n  const renderRace = (index: number) => {\n    const labelRace = `Race ${index + 1}`;\n    const validationUsernames = validateUsernames(resultsOcr[index].map((r: Result) => r.username));\n    const validationPoints = validatePoints(resultsOcr[index].map((r: Result) => r.points));\n\n    return (\n      <div key={index}>\n        <h3>{labelRace}</h3>\n        {renderCroppedImage(index)}\n        <div className=\"flex-container mt\">{renderTable(index)}</div>\n        {!validationUsernames.correct && <div className=\"red\">{validationUsernames.errMsg}</div>}\n        {!validationPoints.correct && <div className=\"red\">{validationPoints.errMsg}</div>}\n      </div>\n    );\n  };\n\n  const renderRaces = () => {\n    if (!resultsOcr || resultsOcr.length <= indexRace) return null;\n\n    return (\n      <>\n        <hr />\n        <div className=\"center\">\n          <button disabled={startOverConfirm} onClick={onClickStartOver}>\n            Start Over\n          </button>\n          {startOverConfirm && (\n            <button className=\"block confirm-start-over\" onClick={onClickStartOverConfirm}>\n              Confirm and start from scratch\n            </button>\n          )}\n          <h2>Results</h2>\n          {renderRace(indexRace)}\n          {resultsOcr.length !== 1 && (\n            <div className=\"pagination-races mt2\">\n              <button\n                className=\"pagination-previous-race mr\"\n                disabled={indexRace === 0}\n                onClick={onChangeIndexRace(-1)}\n              >\n                Previous Race\n              </button>\n              <div className=\"inline ml mr\">{`Race ${indexRace + 1}/${resultsOcr.length}`}</div>\n              <button\n                className=\"pagination-next-race ml\"\n                disabled={indexRace === resultsOcr.length - 1}\n                onClick={onChangeIndexRace(1)}\n              >\n                Next Race\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderLorenzi = () => {\n    if (!resultsOcr || resultsOcr.length <= indexRace) return null;\n\n    const incorrectRaces = getIncorrectRaces(resultsOcr);\n\n    const labelError = `In order to access Lorenzi markdown please fix the errors present in the following race(s): ${incorrectRaces.join(\n      ', '\n    )}`;\n\n    const rowsLorenzi = (lorenzi.match(/\\n/g) || []).length + 1;\n\n    return (\n      <div className=\"center\">\n        <h2>Lorenzi</h2>\n        {incorrectRaces.length > 0 && <div className=\"red\">{labelError}</div>}\n        {incorrectRaces.length === 0 && (\n          <>\n            <CopyToClipboard options={{ message: '' }} text={lorenzi} onCopy={() => setCopiedLorenzi(true)}>\n              <button disabled={lorenzi === '' || copiedLorenzi} className=\"mt\">\n                {copiedLorenzi ? 'Copied' : 'Copy to clipboard'}\n              </button>\n            </CopyToClipboard>\n            <a\n              className=\"block mt mb\"\n              href={LORENZI_TABLE_URL}\n              rel=\"noopener noreferrer\"\n              title=\"Lorenzi Table website\"\n              target=\"_blank\"\n            >\n              Go to Lorenzi Table\n            </a>\n            <textarea className={`textarea-${classPlatform}`} disabled={true} rows={rowsLorenzi} value={lorenzi} />\n          </>\n        )}\n      </div>\n    );\n  };\n\n  const renderCpuMainSection = () => {\n    return (\n      <>\n        <h3>CPUs</h3>\n        {renderCpuSection()}\n      </>\n    );\n  };\n\n  const renderPointsSchemeMainSection = () => {\n    if (issueOnTeams) return null;\n\n    const isFFASetup = isEqual(pointsScheme.slice(0, nbPlayers), FFA_POINTS_SCHEME.slice(0, nbPlayers));\n    const isWarSetup = isEqual(pointsScheme.slice(0, nbPlayers), WAR_POINTS_SCHEME.slice(0, nbPlayers));\n\n    return (\n      <>\n        <h3>Points</h3>\n        <BasicMsg msg=\"Choose a preset or edit each value individually for something more custom\" />\n        <div className=\"mb\">\n          <button\n            onClick={() => {\n              setSignPointsScheme(createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive));\n              setAbsolutePointsScheme(FFA_POINTS_SCHEME);\n            }}\n            disabled={disabledUI || isFFASetup}\n          >\n            FFA preset\n          </button>\n\n          <button\n            className=\"ml\"\n            onClick={() => {\n              setSignPointsScheme(createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive));\n              setAbsolutePointsScheme(WAR_POINTS_SCHEME);\n            }}\n            disabled={disabledUI || isWarSetup}\n          >\n            WAR preset\n          </button>\n        </div>\n        {renderPointsSchemeSection()}\n        {!validationPointsScheme.correct && <div className=\"red\">{validationPointsScheme.errMsg}</div>}\n      </>\n    );\n  };\n\n  const renderTeamMainSection = () => {\n    return (\n      <>\n        <h3>Teams</h3>\n        {renderTeamSection()}\n      </>\n    );\n  };\n\n  const renderStart = () => {\n    if (issueOnPointsScheme || issueOnTeams) return null;\n\n    const colorText = ocrProgress === Progress.Done ? 'orange' : 'red';\n    const classesText = `ml block mb bold ${colorText}`;\n    const text =\n      ocrProgress === Progress.Done\n        ? 'Images were analyzed successfully. Please check the results below are correct. Feel free to tweak any mistake below.'\n        : 'Please ensure all the information entered above is correct, as none of it can be edited afterwards.';\n\n    return (\n      <div className=\"text-center mb\">\n        <div className={classesText}>{text}</div>\n        <input\n          className=\"inline-block ml\"\n          type=\"button\"\n          value=\"Get results\"\n          disabled={disabledUI || !imagesURLs || imagesURLs.length === 0}\n          onClick={doOCR}\n        />\n      </div>\n    );\n  };\n\n  const renderNumericStepperPlayers = () => {\n    const minimumValue = disabledUI ? nbPlayers : 2;\n    const maximumValue = disabledUI ? nbPlayers : CTR_MAX_PLAYERS;\n    const initialValue = disabledUI ? nbPlayers : CTR_MAX_PLAYERS;\n    const onChangeNumericStepper = disabledUI ? () => {} : onChangeNbPlayers;\n    const thumbColor = disabledUI ? '#999999' : '#3385FF';\n\n    return (\n      <div className=\"numeric-stepper-wrapper\">\n        <NumericStepper\n          minimumValue={minimumValue}\n          maximumValue={maximumValue}\n          stepValue={1}\n          initialValue={initialValue}\n          size=\"sm\"\n          inactiveTrackColor=\"#dddddd\"\n          activeTrackColor=\"#ffffff\"\n          activeButtonColor=\"#ffffff\"\n          inactiveIconColor=\"#3385FF\"\n          hoverIconColor=\"#000080\"\n          activeIconColor=\"#000080\"\n          disabledIconColor=\"#dddddd\"\n          thumbColor={thumbColor}\n          thumbShadowAnimationOnTrackHoverEnabled={false}\n          focusRingColor=\"#fff7ed\"\n          onChange={onChangeNumericStepper}\n        />\n      </div>\n    );\n  };\n\n  const renderImagesUpload = () => {\n    const jpgImage = `${EXAMPLE_IMAGES_FOLDER}IMG1.JPG`;\n    const pngImage = `${EXAMPLE_IMAGES_FOLDER}IMG1.PNG`;\n    const guideImage = `${GUIDE_FOLDER}Images.md`;\n\n    if (issueOnPointsScheme || issueOnTeams) return null;\n\n    return (\n      <>\n        <h2>Images</h2>\n        <div className=\"text-center mb\">\n          <div className=\"ml block mb bold\">Screenshots will be ordered alphabetically by name</div>\n          <div className=\"ml block mb\">\n            Select screenshots in JPG/JPEG or PNG format, taken right when Returning to Lobby was around 14 seconds\n          </div>\n          <div className=\"ml block mb\">\n            Examples of valid screenshots:{' '}\n            <a href={jpgImage} rel=\"noopener noreferrer\" title=\"Example of valid JPEG screenshot\" target=\"_blank\">\n              JPG/JPEG\n            </a>{' '}\n            and{' '}\n            <a href={pngImage} rel=\"noopener noreferrer\" title=\"Example of valid PNG screenshot\" target=\"_blank\">\n              PNG\n            </a>\n          </div>\n          <div className=\"ml block mb\">\n            You can upload multiple images at once, as in this{' '}\n            <a\n              href={EXAMPLE_IMAGES_FOLDER_FULL_EVENT}\n              rel=\"noopener noreferrer\"\n              title=\"Example of a valid 10-race event\"\n              target=\"_blank\"\n            >\n              10-race example\n            </a>\n          </div>\n          <div className=\"ml block mb\">\n            For more information, please refer to the{' '}\n            <a href={guideImage} rel=\"noopener noreferrer\" title=\"Guide about Images\" target=\"_blank\">\n              images guide\n            </a>\n          </div>\n          <input\n            className=\"inline mt\"\n            disabled={disabledUI}\n            type=\"file\"\n            multiple\n            accept={[MIME_JPEG, MIME_PNG].join(', ')}\n            onChange={onChangeImage}\n          />\n        </div>\n      </>\n    );\n  };\n\n  const renderMainSection = () => {\n    if (nbPlayersTyped === 0) return null;\n\n    return (\n      <>\n        {renderCpuMainSection()}\n        {renderTeamMainSection()}\n        {renderPointsSchemeMainSection()}\n        {renderImagesUpload()}\n        {renderImages()}\n        {renderStart()}\n        {renderRaces()}\n        {renderLorenzi()}\n      </>\n    );\n  };\n\n  const renderPointsSchemeSection = () => {\n    return renderTablePointsScheme();\n  };\n\n  const renderTeamSection = () => {\n    if (includeCpuPlayers) return <BasicMsg msg=\"Teams are not available when CPUs are activated\" />;\n\n    return (\n      <>\n        <select disabled={disabledUI} onChange={onChangeNbTeams} value={nbTeams}>\n          {optionsNbTeams.map((option: number) => {\n            const label = option === nbPlayers ? 'FFA' : `${option} teams`;\n            return (\n              <option key={option} label={label} value={option}>\n                {label}\n              </option>\n            );\n          })}\n        </select>\n        {renderTeamRepartition()}\n      </>\n    );\n  };\n\n  const onChangeTeam = (player: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newPlayerTeams = { ...playerTeams, [player]: value };\n    setPlayerTeams(newPlayerTeams);\n  };\n\n  const renderPlayerTeams = (player: string) => {\n    return teams.map((team: string) => {\n      const key = `${player}-${team}`;\n      const isChecked = playerTeams[player] === team;\n\n      return (\n        <div className=\"ml inline\" key={key}>\n          <input\n            type=\"radio\"\n            disabled={disabledUI}\n            id={key}\n            name={player}\n            value={team}\n            checked={isChecked}\n            onChange={onChangeTeam(player)}\n          />\n          <label htmlFor={key}>{team}</label>\n        </div>\n      );\n    });\n  };\n\n  const renderPlayerTeamRepartition = (player: string) => {\n    const colorPlayer = getColorPlayer(player, teams, playerTeams);\n    const playerClassnames = `inline ${colorPlayer}`;\n\n    return (\n      <li className=\"block\" key={player}>\n        <div className={playerClassnames}>{player}</div>\n        <div className=\"ml mb block text-center\">{renderPlayerTeams(player)}</div>\n      </li>\n    );\n  };\n\n  const renderTeamRepartition = () => {\n    if (includeCpuPlayers) return null;\n    if (isFFA) return <div className=\"ml block mb\">Free For All means there is no need to set up teams!</div>;\n\n    const classesValidation = validationTeams.isWarning ? 'orange' : 'red';\n\n    return (\n      <>\n        <ul className=\"text-center no-padding mt2\">\n          <div className=\"inline-block\">{playersNames.map(renderPlayerTeamRepartition)}</div>\n          {!validationTeams.correct && <div className={classesValidation}>{validationTeams.errMsg}</div>}\n        </ul>\n      </>\n    );\n  };\n\n  const renderCpuSection = () => {\n    if (!cpuData || Object.keys(cpuData).length === 0) return <BasicMsg msg={PLACEHOLDER_CPUS} />;\n\n    const guideCpu = `${GUIDE_FOLDER}CPUs.md`;\n\n    const optionsCpuLanguages = Object.keys(cpuData);\n    const textCheckbox = shouldIncludeCpuPlayers\n      ? `Automatically activated bots because ${nbPlayersTyped} human player(s) was/were filled out of a total of ${nbPlayers} players`\n      : 'Check this if there were bots during the race';\n\n    return (\n      <>\n        <div className=\"text-center mb\">\n          <input\n            name=\"includeCpuPlayers\"\n            type=\"checkbox\"\n            checked={includeCpuPlayers}\n            onChange={onCpuCheckboxChange}\n            disabled={shouldIncludeCpuPlayers || disabledUI}\n          />\n          <div className=\"ml inline\">{textCheckbox}</div>\n        </div>\n        {includeCpuPlayers && (\n          <>\n            <BasicMsg msg=\"Bots are automatically determined based on the language and cannot be edited\" />\n            <div className=\"ml block mb\">\n              For more information, please refer to the{' '}\n              <a href={guideCpu} rel=\"noopener noreferrer\" title=\"Guide about CPUs\" target=\"_blank\">\n                CPUs guide\n              </a>\n            </div>\n            <div className=\"inline mr\">Language in images</div>\n            <select disabled={disabledUI} onChange={onChangeCpuLanguage} value={cpuLanguage}>\n              {optionsCpuLanguages.map((option: string) => {\n                const label = `${option}`;\n                return (\n                  <option key={option} label={label} value={option}>\n                    {label}\n                  </option>\n                );\n              })}\n            </select>\n            <textarea\n              className={`textarea-${classPlatform}`}\n              disabled={true}\n              placeholder={PLACEHOLDER_CPUS}\n              rows={CTR_MAX_PLAYERS}\n              value={cpuPlayers}\n            />\n          </>\n        )}\n      </>\n    );\n  };\n\n  const onMount = async () => {\n    // TODO: initialize?\n    setOnMountOver(true);\n    setDisabledUI(false);\n    fetch(URL_CPUS)\n      .then((response) => response.json())\n      .then((data) => {\n        setCpuData(data);\n        setCpuPlayers(formatCpuPlayers((data as any)[WEBSITE_DEFAULT_LANGUAGE]));\n      });\n  };\n\n  const doOCR = async () => {\n    if (!onMountOver) return;\n\n    setDisabledUI(true);\n    setOcrProgress(Progress.Started);\n    setOcrProgressText('Initialization...');\n    setResultsOcr([]);\n    setIndexRace(0);\n    setCroppedImages([]);\n    setLorenzi('');\n    setStartOverConfirm(false);\n\n    const schedulerUsername = createScheduler();\n\n    const workerUsername = createWorker({\n      // logger: (m: any) => console.log(m)\n    });\n\n    schedulerUsername.addWorker(workerUsername);\n\n    await workerUsername.load();\n    await workerUsername.loadLanguage(OCR_LANGUAGE);\n    await workerUsername.initialize(OCR_LANGUAGE);\n    const usernameParams = getParams(Category.Username, getPlayers(players), getPlayers(cpuPlayers), includeCpuPlayers);\n\n    await workerUsername.setParameters(usernameParams);\n\n    const playerIndexes = numberRange(0, nbPlayers - 1);\n\n    const promisesX = async (\n      playerIndex: number,\n      category: Category,\n      info: any, // TODO: type it better\n      imgTransCopy: any\n    ) => {\n      const scheduler = schedulerUsername;\n      const dimensions = getExtract(info, playerIndex, category);\n      const { extension } = info;\n      const mimeType = getMimeType(extension);\n\n      const extracted = imgTransCopy.crop(dimensions.left, dimensions.top, dimensions.width, dimensions.height);\n      const options = {\n        count: 2,\n        type: mimeType\n      };\n\n      const buffer: any = await extracted.getBufferAsync(mimeType);\n      const rgb = await getColors(buffer, options).then((colors: any) => {\n        return [colors[0].rgb(), colors[1].rgb()];\n      });\n\n      const shouldInvert = rgb[0][0] < rgb[1][0] && rgb[0][1] < rgb[1][1] && rgb[0][2] < rgb[1][2];\n      const extractedFin = shouldInvert ? extracted.invert() : extracted;\n\n      const bufferFin: any = await extractedFin.getBufferAsync(mimeType);\n      return scheduler.addJob('recognize', bufferFin);\n    };\n\n    let resultsOcrTemp: Result[][] = [];\n    let croppedImagesTemp: string[] = [];\n\n    // TODO: have better error handling\n    for (let i = 0; i < imagesURLs.length; i++) {\n      try {\n        const progressText = `Image ${i + 1} out of ${imagesURLs.length}...`;\n        setOcrProgressText(progressText);\n\n        logTime('imgRead');\n        const imgJimpTemp = await Jimp.read(imagesURLs[i]);\n        logTime('imgRead', true);\n\n        const initialHeight = imgJimpTemp.bitmap.height;\n        const shouldResize = initialHeight > MAX_HEIGHT_IMG;\n\n        if (shouldResize) logTime('imgResize');\n\n        const imgJimp = shouldResize ? imgJimpTemp.resize(Jimp.AUTO, MAX_HEIGHT_IMG) : imgJimpTemp;\n\n        if (shouldResize) logTime('imgResize', true);\n\n        logTime('imgRotate');\n\n        const imgTrans = imgJimp.rotate(-6.2);\n\n        logTime('imgRotate', true);\n\n        logTime('imgRest');\n\n        const h = imgTrans.bitmap.height;\n        const w = imgTrans.bitmap.width;\n        const extension = imgTrans.getExtension();\n        const info = { height: h, extension, width: w };\n        const dimensionsCrop = getExtract(info, nbPlayers, Category.All);\n\n        const imgTransCopy = imgTrans.clone();\n        const extractedCrop = imgTransCopy.crop(\n          dimensionsCrop.left,\n          dimensionsCrop.top,\n          dimensionsCrop.width,\n          dimensionsCrop.height\n        );\n\n        // eslint-disable-next-line no-loop-func\n        extractedCrop.getBase64(MIME_JPEG, (err: any, src: string) => {\n          croppedImagesTemp.push(src);\n        });\n\n        const imgTransGray = imgTrans.grayscale();\n\n        logTime('imgRest', true);\n\n        logTime('promisesCreation');\n\n        const promisesNames = playerIndexes.map((playerIndex) =>\n          promisesX(playerIndex, Category.Username, info, imgTransGray.clone())\n        );\n\n        logTime('promisesCreation', true);\n\n        logTime('promisesResolve');\n\n        const results = await Promise.all(promisesNames);\n\n        logTime('promisesResolve', true);\n\n        const resultsNames = results.map((r) => cleanString((r as any).data.text));\n\n        logMsg('resultsNames');\n        logMsg(resultsNames);\n\n        const dataResults: Result[] = [];\n        const referencePlayers = getReferencePlayers(players, cpuPlayers, includeCpuPlayers);\n        const csv: (string | number)[][] = [];\n        playerIndexes.forEach((playerIndex) => {\n          const playerGuess = resultsNames[playerIndex];\n          const playerMatch = getClosestString(playerGuess, referencePlayers);\n          const result: Result = {\n            username: playerMatch,\n            rawUsername: playerGuess,\n            distanceUsername: getEditDistance(playerMatch, playerGuess),\n            position: playerIndex + 1,\n            points: pointsScheme[playerIndex]\n          };\n\n          csv.push([result.username, result.rawUsername, result.distanceUsername]);\n\n          dataResults.push(result);\n        });\n\n        logTable(csv);\n\n        resultsOcrTemp.push(dataResults);\n      } catch (err) {\n        // TODO: have better error handling\n        logMsg(err);\n        // setDisabledUI(false);\n      }\n    }\n\n    setResultsOcr(resultsOcrTemp);\n    setCroppedImages(croppedImagesTemp);\n    setOcrProgress(Progress.Done);\n    setOcrProgressText('');\n    // setDisabledUI(false);\n\n    await schedulerUsername.terminate();\n  };\n\n  const { width } = useWindowSize();\n  const [ocrProgress, setOcrProgress] = React.useState(Progress.NotStarted);\n  const [ocrProgressText, setOcrProgressText] = React.useState('');\n  const [images, setImages] = React.useState<any[]>([]);\n  const [imagesURLs, setImagesURLs] = React.useState<any[]>([]);\n  const [croppedImages, setCroppedImages] = React.useState<any[]>([]);\n  const [nbPlayers, setNbPlayers] = React.useState(CTR_MAX_PLAYERS);\n  const [cpuLanguage, setCpuLanguage] = React.useState(WEBSITE_DEFAULT_LANGUAGE);\n  const [disabledUI, setDisabledUI] = React.useState(true);\n  const [onMountOver, setOnMountOver] = React.useState(false);\n  const [resultsOcr, setResultsOcr] = React.useState<Result[][]>([]);\n  const [players, setPlayers] = React.useState('');\n  const [pointsScheme, setPointsScheme] = React.useState<number[]>(FFA_POINTS_SCHEME);\n  const [absolutePointsScheme, setAbsolutePointsScheme] = React.useState<number[]>(FFA_POINTS_SCHEME);\n  const [signPointsScheme, setSignPointsScheme] = React.useState<Sign[]>(\n    createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive)\n  );\n\n  const [copiedPlayers, setCopiedPlayers] = React.useState(false);\n  const [copiedLorenzi, setCopiedLorenzi] = React.useState(false);\n  const [cpuPlayers, setCpuPlayers] = React.useState(PLACEHOLDER_CPUS);\n  const [cpuData, setCpuData] = React.useState<any>({});\n  const [includeCpuPlayers, setIncludeCpuPlayers] = React.useState(false);\n  const [teams, setTeams] = React.useState<string[]>(getTeamNames(INITIAL_TEAMS_NB));\n  const [nbTeams, setNbTeams] = React.useState(INITIAL_TEAMS_NB);\n  const [playerTeams, setPlayerTeams] = React.useState<Record<string, string>>({});\n  const [indexRace, setIndexRace] = React.useState(0);\n  const [lorenzi, setLorenzi] = React.useState('');\n  const [startOverConfirm, setStartOverConfirm] = React.useState(false);\n\n  const nbPlayersTyped = uniq(getPlayers(players)).length;\n  const shouldIncludeCpuPlayers = nbPlayersTyped < nbPlayers;\n\n  React.useEffect(() => {\n    onMount();\n  }, []);\n\n  React.useEffect(() => {\n    const copy = [...absolutePointsScheme];\n    const newPointsScheme = copy.map((absolutePoints: number, index: number) => {\n      const multiplier = signPointsScheme[index] === Sign.Negative ? -1 : 1;\n      return multiplier * absolutePoints;\n    });\n\n    setPointsScheme(newPointsScheme);\n    logMsg('newPointsScheme');\n    logMsg(newPointsScheme);\n  }, [absolutePointsScheme, signPointsScheme]);\n\n  React.useEffect(() => {\n    if (images.length < 1) return;\n    const newImageUrls: any[] = [];\n    const sortImages = sortImagesByFilename(images);\n    sortImages.forEach((image) => {\n      newImageUrls.push(URL.createObjectURL(image));\n    });\n    setImagesURLs(newImageUrls);\n  }, [images]);\n\n  React.useEffect(() => {\n    if (resultsOcr && resultsOcr.length > 0) {\n      const newLorenzi = createLorenzi(resultsOcr, playerTeams, nbTeams, nbPlayers, teams, includeCpuPlayers);\n\n      setLorenzi(newLorenzi.join('\\n'));\n      setCopiedLorenzi(false);\n    }\n  }, [resultsOcr]);\n\n  React.useEffect(() => {\n    if (shouldIncludeCpuPlayers && !includeCpuPlayers) {\n      setIncludeCpuPlayers(true);\n    }\n  }, [shouldIncludeCpuPlayers, includeCpuPlayers]);\n\n  const onPlayersChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setPlayers(e.currentTarget.value);\n    setCopiedPlayers(false);\n\n    setNbTeams(INITIAL_TEAMS_NB);\n    setTeams(getTeamNames(INITIAL_TEAMS_NB));\n    setPlayerTeams({});\n  };\n\n  const onClickStartOver = (_e: any) => {\n    setStartOverConfirm(true);\n  };\n\n  const onClickStartOverConfirm = (_e: any) => {\n    window.location.reload();\n  };\n\n  const onChangeIndexRace = (delta: number) => (_e: any) => {\n    const newIndex = indexRace + delta;\n\n    if (newIndex < 0 || newIndex >= resultsOcr.length) return;\n\n    setIndexRace(newIndex);\n  };\n\n  const onChangeImage = (e: any) => {\n    setImages([...e.target.files]);\n    setResultsOcr([]);\n  };\n\n  const onChangeNbPlayers = (value: number) => {\n    if (value === nbPlayers) return;\n\n    /*\n      Due to Numeric Stepper not using value prop\n      we should only call this from Numeric Stepper\n    */\n    setNbPlayers(value);\n\n    setPlayers('');\n\n    setNbTeams(INITIAL_TEAMS_NB);\n    setTeams(getTeamNames(INITIAL_TEAMS_NB));\n    setPlayerTeams({});\n  };\n\n  const onChangeNbTeams = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newNbTeams = Number(e.target.value);\n    const teamNames = getTeamNames(newNbTeams);\n    const isFFA = newNbTeams === nbPlayers;\n\n    setNbTeams(newNbTeams);\n    setTeams(teamNames);\n    setPlayerTeams({});\n\n    setSignPointsScheme(createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive));\n    if (isFFA) setAbsolutePointsScheme(FFA_POINTS_SCHEME);\n    else setAbsolutePointsScheme(WAR_POINTS_SCHEME);\n  };\n\n  const onChangeCpuLanguage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setCpuLanguage(e.target.value);\n    setCpuPlayers(formatCpuPlayers(cpuData[e.target.value]));\n  };\n\n  const onChangeSignPointsScheme = (indexPointsScheme: number) => (e: React.ChangeEvent<HTMLSelectElement>) => {\n    if (!signPointsScheme || signPointsScheme.length < indexPointsScheme) return;\n    const { value } = e.target;\n    const newValue = value === Sign.Positive ? Sign.Positive : Sign.Negative;\n    const copy = [...signPointsScheme];\n    copy[indexPointsScheme] = newValue;\n    setSignPointsScheme(copy);\n    logMsg('new signPointsScheme');\n    logMsg(copy);\n  };\n\n  const onChangeAbsolutePointsScheme =\n    (indexAbsolutePointsScheme: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (!absolutePointsScheme || absolutePointsScheme.length < indexAbsolutePointsScheme) return;\n      const { value } = e.currentTarget;\n      const copy = [...absolutePointsScheme];\n      const valueNumber = Number(value);\n      const valueSafe = isNaN(valueNumber) ? 0 : valueNumber;\n      copy[indexAbsolutePointsScheme] = Math.abs(valueSafe);\n      setAbsolutePointsScheme(copy);\n    };\n\n  const onChangeResultsPoints =\n    (indexResultOcr: number, indexPlayer: number) => (e: React.ChangeEvent<HTMLSelectElement>) => {\n      if (!resultsOcr || resultsOcr.length < indexResultOcr) return;\n      const copy = [...resultsOcr];\n      copy[indexResultOcr][indexPlayer].points = Number(e.target.value);\n      setResultsOcr(copy);\n    };\n\n  const onChangeResultsPlayer =\n    (indexResultOcr: number, indexPlayer: number) => (e: React.ChangeEvent<HTMLSelectElement>) => {\n      if (!resultsOcr || resultsOcr.length < indexResultOcr) return;\n      const copy = [...resultsOcr];\n      copy[indexResultOcr][indexPlayer].username = e.target.value;\n      setResultsOcr(copy);\n    };\n\n  const onCpuCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newVal = e.target.checked;\n    setIncludeCpuPlayers(newVal);\n    setSignPointsScheme(createArraySameValue(CTR_MAX_PLAYERS, Sign.Positive));\n    if (newVal === true) setAbsolutePointsScheme(FFA_POINTS_SCHEME);\n    else setAbsolutePointsScheme(WAR_POINTS_SCHEME);\n  };\n\n  const optionsNbTeams = getOptionsTeams(nbPlayers);\n  const classPlatform = isMobile ? 'mobile' : 'desktop';\n  const classBgDisabled = disabledUI && (!resultsOcr || resultsOcr.length === 0) ? 'bg-grey' : 'bg-white';\n  const playersNames = uniq(getPlayers(players)).sort(sortCaseInsensitive);\n  const validationTeams = validateTeams(playersNames, teams, playerTeams);\n  const validationPointsScheme = validatePoints(pointsScheme.slice(0, nbPlayers));\n  const userAgent = navigator?.userAgent ?? '';\n  const userAgentResult = new UAParser(userAgent).getResult();\n  const placeholderPlayers = getPlayersPlaceholder(nbPlayers, userAgentResult);\n  const isFFA = nbTeams === nbPlayers;\n  const issueOnTeams = !includeCpuPlayers && !isFFA && !validationTeams.correct;\n  const issueOnPointsScheme = !validationPointsScheme.correct;\n  const guideFAQ = `${GUIDE_FOLDER}FAQ.md`;\n\n  return (\n    <div className=\"main\">\n      <h1>{WEBSITE_TITLE}</h1>\n      <div className=\"w3-light-grey\"></div>\n      {ocrProgress === Progress.Done && (\n        <Confetti\n          width={width}\n          height={document.body.scrollHeight > window.innerHeight ? document.body.scrollHeight : window.innerHeight}\n          numberOfPieces={isMobile ? 800 : 1600}\n          recycle={false}\n        />\n      )}\n      <div className={`center main-content-${classPlatform} ${classBgDisabled}`}>\n        {renderProgressBar()}\n        <h2>Introduction</h2>\n        <BasicMsg msg=\"Please enter information from top to bottom for a smooth experience\" />\n        <BasicMsg msg=\"At the end, we'll produce the Lorenzi markdown for you\" />\n        <a\n          href={VIDEO_TUTORIAL}\n          rel=\"noopener noreferrer\"\n          title=\"Video Tutorial about how to use Crash Team Results website\"\n          target=\"_blank\"\n        >\n          Video Tutorial\n        </a>\n        {' - '}\n        <a href={guideFAQ} rel=\"noopener noreferrer\" title=\"Frequently Asked Questions\" target=\"_blank\">\n          FAQ\n        </a>\n        <h2>Players</h2>\n        <h3>Number of players</h3>\n        <BasicMsg msg=\"This includes CPUs if any\" />\n        {renderNumericStepperPlayers()}\n        <h3>Human Players</h3>\n        <BasicMsg msg=\"Type all human players present in the races. Type one username per line.\" />\n        <textarea\n          className={`textarea-${classPlatform}`}\n          disabled={disabledUI}\n          placeholder={placeholderPlayers}\n          rows={nbPlayers}\n          value={players}\n          onChange={onPlayersChange}\n        />\n        <CopyToClipboard options={{ message: '' }} text={players} onCopy={() => setCopiedPlayers(true)}>\n          <button disabled={nbPlayersTyped === 0 || copiedPlayers} className=\"mt\">\n            {copiedPlayers ? 'Copied' : 'Copy to clipboard'}\n          </button>\n        </CopyToClipboard>\n        {renderMainSection()}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}